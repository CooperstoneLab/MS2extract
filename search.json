[{"path":"https://cooperstonelab.github.io/MS2extract/articles/Aintroduction.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"1 - Introduction to MS2extract","text":"vignette objective introduce MS2extract. main goal package providing tool create -house MS/MS compound libraries. Users can access specific function help command help([‘function name’]). simplified workflow presented Figure 1. Briefly, mzML/mzXML files imported memory. , based metadata provided user metabolite chemical formula, ionization mode, MS2extract computes theoretical precursor m/z. information, product ion scans matches theoretical ionized mass extracted, given ppm tolerance. Next, low intensity signals, background noise can removed spectra. Finally, users can export extracted MS/MS spectra MS/MS library format (.msp/.mgf) used reference library compound identification annotation, deposit created library different repositories GNPS, MassBank. Figure 1. Overview processing pipeline MS2extract","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Aintroduction.html","id":"basic-workflow","dir":"Articles","previous_headings":"","what":"Basic workflow","title":"1 - Introduction to MS2extract","text":"workflow four main steps: data import, extract MS/MS scans, detect masses, export MS/MS library section, explain detailed manner main steps create -house MS/MS libraries, well provide information required optional arguments users may need provide order effectively use package. Additionally, package also includes set batch_*() functions allows process multiple .mzXML files . However, metadata required run automated pipeline use batch_*() functions described Using MS2extract Batch Pipeline.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Aintroduction.html","id":"data-import","dir":"Articles","previous_headings":"Basic workflow","what":"Data import","title":"1 - Introduction to MS2extract","text":"section focused describing MS2extract package imports MS/MS data. also include detailed document process Behind curtains importing MS/MS data vignette. main import function relies R package metID. adapted import function order read mass spectrometry data mzML/mzXML files. new adaptation consists importing scans data list (S3 object) rather S4 object, facilitating downstream tidy analysis object. function execute back-end calculation theoretical ionized m/z compound order extract precursor ions match mass given ppm. arguments import_mzxml() function : file: mzML/mzXML file name met_metadata: metadata analyte ppm: error mass expressed ppm …","code":"# Loading the package library(MS2extract)   # Print function arg formals(import_mzxml) #> $file #> NULL #>  #> $met_metadata #> NULL #>  #> $ppm #> [1] 10"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Aintroduction.html","id":"file","dir":"Articles","previous_headings":"Basic workflow > Data import","what":"file","title":"1 - Introduction to MS2extract","text":"argument pass file name MS/MS data. provide example file procyanidin A2, collected negative ionization mode 20 eV CE.","code":"# Importing  Procyanidin A2 MS/MS spectra in negative ionization mode # and 20 eV as the collision energy ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" ) # File name ProcA2_file #> [1] \"/home/runner/work/_temp/Library/MS2extract/extdata/ProcyanidinA2_neg_20eV.mzXML\""},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Aintroduction.html","id":"met_metadata","dir":"Articles","previous_headings":"Basic workflow > Data import","what":"met_metadata","title":"1 - Introduction to MS2extract","text":"argument refers compound metadata users need provide order properly import scans related compound interest. met_metadata data frame required optional columns. required columns employed calculate theoretical ionized m/z value, given formula ionization mode. optional columns, option provide chromatographic region Interest (ROI), specifying time compound elutes, order keep retention time window. required columns : Formula: character string specifying metabolite formula Ionization_mode: ionization mode employed data collection. COLLISIONENERGY: CE applied MS/MS fragmentation optional columns : min_rt: double, minimum retention time keep (seconds) max_rt: double, maximum retention time keep (seconds)","code":"# Procyanidin A2 metadata ProcA2_data <- data.frame(   Formula = \"C30H24O12\", Ionization_mode = \"Negative\",   min_rt = 163, max_rt = 180 ) ProcA2_data #>     Formula Ionization_mode min_rt max_rt #> 1 C30H24O12        Negative    163    180"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Aintroduction.html","id":"ppm","dir":"Articles","previous_headings":"Basic workflow > Data import","what":"ppm","title":"1 - Introduction to MS2extract","text":"ppm refers maximum m/z deviation theoretical mass. ppm 10 units mean total allows m/z window 20 ppm. default, 10 ppm used.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Aintroduction.html","id":"import_mzxml","dir":"Articles","previous_headings":"Basic workflow > Data import","what":"import_mzxml()","title":"1 - Introduction to MS2extract","text":"arguments explained, can use import_mzxml() function.","code":"# Import Procyanidin A2 data ProcA2_raw <- import_mzxml(ProcA2_file, met_metadata = ProcA2_data, ppm = 5) #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 5 ppm: 575.11663 and 575.12238  # 24249 rows = ions detected in all scans dim(ProcA2_raw) #> [1] 24249     6"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Aintroduction.html","id":"extracting-msms-spectra","dir":"Articles","previous_headings":"Basic workflow","what":"Extracting MS/MS spectra","title":"1 - Introduction to MS2extract","text":"Now data imported, can proceed extract intense MS/MS scan. function computes MS/MS total ion chromatogram (TIC) summing intensities MS/MS scans, selects scan highest total intensity. worth noting imported MS/MS scans precursor ion matches theoretical m/z value compound provided previous step. Therefore, accurrate interpret chromatogram EIC precursor ion, MS/MS scans included. function takes three arguments: spec: imported MS/MS spectra verbose: boolean, verbose = TRUE, MS/MS TIC spectra printed, verbose = FALSE, plots displayed out_list: boolean, out_list = TRUE, extracted MS/MS spectra table plots returned list, otherwise MS/MS spectra returned data frame.  generated two plots, MS/MS EIC precursor ion (top plot), MS/MS spectra intense MS/MS scan (bottom plot). MS/MS spectra, blue diamond placed top precursor m/z ion. diamond blue fill diamond, means precursor ion found MS/MS fragmentation data, diamond blue filled, represent precursor ion found fragmentation data. Furthermore, can note x axis MS/MS spectra ranges 0 1700 m/z. related acquisition parameters used data collection m/z range: 50-1700, creates low intensity signals captured included resulting MS/MS spectra. range MS/MS m/z values 100 1699 m/z, intensities low seen plot.","code":"ProcA2_extracted <- extract_MS2(ProcA2_raw, verbose = TRUE, out_list = FALSE) #> Warning: `position_stack()` requires non-overlapping x intervals range(ProcA2_extracted$mz) #> [1]  100.0852 1699.0981"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Aintroduction.html","id":"detecting-masses","dir":"Articles","previous_headings":"Basic workflow","what":"Detecting masses","title":"1 - Introduction to MS2extract","text":"Similarly MZmine pipeline, detecting masses refers setting signal intensity threshold MS/MS ions meet kept data, signals meet defined threshold removed. function can also normalize spectra ion intensity percentage based base peak. filtering step based percentage base peak (intense ion). three required arguments : spec: data frame containing MS/MS spectra. normalize: boolean indicating MS/MS spectra normalized base peak proceeding filter low intensity signals (normalize = TRUE), normalize = FALSE user provide minimum ion count. min_int: integer referring minimum ion intensity. value min_int line user decides normalize spectra . spectra normalized, min_intensity value percentage, otherwise min_intensity value expressed ion count units. default, normalization set TRUE minimum intensity set 1% remove background noise. can see now range m/z values maximum value 576.1221 m/z.","code":"ProcA2_detected <- detect_mass(ProcA2_extracted, normalize = TRUE, min_int = 1) range(ProcA2_detected$mz) #> [1] 125.0243 576.1221"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Aintroduction.html","id":"msms-spectra-plot","dir":"Articles","previous_headings":"Basic workflow","what":"MS/MS spectra plot","title":"1 - Introduction to MS2extract","text":"can proceed plot filtered MS/MS spectra plot_MS2spectra() function. ggplot2 based function; blue diamond refers precursor ion. take look previous MS/MS plot, less background noise MS/MS spectra low intensity ions removed.","code":"plot_MS2spectra(ProcA2_detected)"},{"path":[]},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Aintroduction.html","id":"nist--msp-format","dir":"Articles","previous_headings":"Basic workflow > Exporting MS/MS spectra","what":"NIST .msp format","title":"1 - Introduction to MS2extract","text":"Finally extracting MS/MS spectra removing background noise, can proceed export MS/MS NIST .msp format. task, need extra information compound, SMILES, COLLISIONENERGY, etc. can find minimum required information accessing write_msp() function help running command ?write_msp. example table can found : three arguments function : spec: data frame containing extracted MS/MS spectra spec_metadata: data frame containing values including resulting .msp file msp_name: string name msp file containing (.msp) extension writing msp file, see following file content:","code":"# Reading the metadata metadata_file <- system.file(\"extdata\",   \"msp_metadata.csv\",   package = \"MS2extract\" )  metadata <- read.csv(metadata_file) dplyr::glimpse(metadata) #> Rows: 1 #> Columns: 8 #> $ NAME            <chr> \"Procyanidin A2\" #> $ PRECURSORTYPE   <chr> \"[M-H]-\" #> $ FORMULA         <chr> \"C30H24O12\" #> $ INCHIKEY        <chr> \"NSEWTSAADLNHNH-LSBOWGMISA-N\" #> $ SMILES          <chr> \"C1C(C(OC2=C1C(=CC3=C2C4C(C(O3)(OC5=CC(=CC(=C45)O)O)C6… #> $ IONMODE         <chr> \"Negative\" #> $ INSTRUMENTTYPE  <chr> \"LC-ESI-QTOF\" #> $ COLLISIONENERGY <chr> \"20 eV\" write_msp(   spec = ProcA2_detected,   spec_metadata = metadata,   msp_name = \"Procyanidin_A2\" ) #> • Filtering MS/MS scans for 20 CE #> NAME: Procyanidin A2 #> PRECURSORMZ: 575.11957 #> PRECURSORTYPE: [M-H]- #> FORMULA: C30H24O12 #> RETENTIONTIME: 2.844 #> IONMODE: Negative #> COMMENT: Spectra extracted with MS2extract R package #> INCHIKEY: NSEWTSAADLNHNH-LSBOWGMISA-N #> SMILES: C1C(C(OC2=C1C(=CC3=C2C4C(C(O3)(OC5=CC(=CC(=C45)O)O)C6=CC(=C(C=C6)O)O)O)O)C7=CC(=C(C=C7)O)O)O #> CCS:  #> COLLISIONENERGY: 20 eV #> INSTRUMENTTYPE: LC-ESI-QTOF #> Num Peaks: 38 #> 125.02431 10 #> 137.02441 3 #> 161.02449 2 #> 163.00355 3 #> 165.01881 2 #> 217.04996 2 #> 241.05002 2 #> 245.04547 2 #> 245.0817 2 #> 257.0451 2 #> 285.04063 62 #> 286.04387 4 #> 287.05579 7 #> 289.0718 48 #> 290.07495 3 #> 297.03993 4 #> 307.06114 2 #> 313.03573 2 #> 327.05044 7 #> 407.07693 16 #> 408.08161 2 #> 411.07227 9 #> 423.07231 53 #> 424.07537 5 #> 435.07138 3 #> 447.07296 5 #> 449.08799 51 #> 450.09044 6 #> 452.07453 15 #> 453.08155 7 #> 471.1086 2 #> 513.11796 2 #> 531.13006 2 #> 539.09834 22 #> 540.10156 3 #> 557.10809 5 #> 575.11968 100 #> 576.12208 13"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Aintroduction.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"1 - Introduction to MS2extract","text":"","code":"sessionInfo() #> R version 4.3.1 (2023-06-16) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] MS2extract_0.02.0 #>  #> loaded via a namespace (and not attached): #>   [1] Rdpack_2.5            readxl_1.4.3          rlang_1.1.1           #>   [4] magrittr_2.0.3        clue_0.3-65           compiler_4.3.1        #>   [7] systemfonts_1.0.5     vctrs_0.6.4           stringr_1.5.0         #>  [10] ProtGenerics_1.32.0   pkgconfig_2.0.3       fastmap_1.1.1         #>  [13] backports_1.4.1       labeling_0.4.3        utf8_1.2.3            #>  [16] rmarkdown_2.25        tzdb_0.4.0            preprocessCore_1.62.1 #>  [19] ragg_1.2.6            purrr_1.0.2           xfun_0.40             #>  [22] zlibbioc_1.46.0       cachem_1.0.8          jsonlite_1.8.7        #>  [25] BiocParallel_1.34.2   broom_1.0.5           parallel_4.3.1        #>  [28] cluster_2.1.4         R6_2.5.1              bslib_0.5.1           #>  [31] stringi_1.7.12        limma_3.56.2          car_3.1-2             #>  [34] jquerylib_0.1.4       cellranger_1.1.0      Rcpp_1.0.11           #>  [37] iterators_1.0.14      knitr_1.44            readr_2.1.4           #>  [40] IRanges_2.34.1        tidyselect_1.2.0      abind_1.4-5           #>  [43] yaml_2.3.7            doParallel_1.0.17     codetools_0.2-19      #>  [46] affy_1.78.2           lattice_0.21-8        tibble_3.2.1          #>  [49] plyr_1.8.9            Biobase_2.60.0        withr_2.5.1           #>  [52] evaluate_0.22         OrgMassSpecR_0.5-3    desc_1.4.2            #>  [55] pillar_1.9.0          affyio_1.70.0         BiocManager_1.30.22   #>  [58] ggpubr_0.6.0          carData_3.0-5         foreach_1.5.2         #>  [61] stats4_4.3.1          MSnbase_2.26.0        MALDIquant_1.22.1     #>  [64] ncdf4_1.21            generics_0.1.3        rprojroot_2.0.3       #>  [67] S4Vectors_0.38.2      hms_1.1.3             ggplot2_3.4.4         #>  [70] munsell_0.5.0         scales_1.2.1          glue_1.6.2            #>  [73] tools_4.3.1           mzID_1.38.0           vsn_3.68.0            #>  [76] mzR_2.34.1            ggsignif_0.6.4        fs_1.6.3              #>  [79] XML_3.99-0.14         cowplot_1.1.1         grid_4.3.1            #>  [82] impute_1.74.1         tidyr_1.3.0           rbibutils_2.2.15      #>  [85] MsCoreUtils_1.12.0    colorspace_2.1-0      cli_3.6.1             #>  [88] textshaping_0.3.7     fansi_1.0.5           dplyr_1.1.3           #>  [91] pcaMethods_1.92.0     gtable_0.3.4          rstatix_0.7.2         #>  [94] sass_0.4.7            digest_0.6.33         BiocGenerics_0.46.0   #>  [97] ggrepel_0.9.3         farver_2.1.1          memoise_2.0.1         #> [100] htmltools_0.5.6.1     pkgdown_2.0.7         lifecycle_1.0.3       #> [103] Rdisop_1.60.0         MASS_7.3-60"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Busing_batch_extract.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"2 - Using the MS2extract batch pipeline","text":"previous tutorial Introduction MS2extract package, described detailed manner core functions package. starting use MS2extract package tutorial, encourage take look tutorial first. familiar core workflow functions package, can dive automated pipeline proposed batch_*() functions. find want extract many MS/MS spectra , want use thesebatch_*() functions first three main steps separate batch_*() alternative functions; importing mzXML files, extracting MS/MS spectra, detecting masses. However, exporting library .msp .mgf file able detect provided spectra comes single multiple .mzXML/.mzML files, function works cases. Figure 1. Overview general data processing pipeline extract MS/MS spectra using MS2extract package","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Busing_batch_extract.html","id":"batch-functions","dir":"Articles","previous_headings":"Introduction","what":"Batch functions","title":"2 - Using the MS2extract batch pipeline","text":"familiar arguments core functions accept, section describe extra arguments specific batch_*() functions require.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Busing_batch_extract.html","id":"batch_import_mzxml","dir":"Articles","previous_headings":"Introduction > Batch functions","what":"batch_import_mzxml","title":"2 - Using the MS2extract batch pipeline","text":"Similarly import_mzxml(), need provide compound metadata, minimum compound name, formula, ionization mode, collision energy. Optionally, recommended, region interest compound elute (min_rt max_rt). difference batch_import_mzxml() import_mzxml() met_metadata can one row. example, working two compounds, procyanidin A2 rutin. Tip: can extract multiple compounds .mzXML different precursor ion m/z. Tip: can also specify multiple compounds m/z long different retention time. raw mzXML data contains: Procyanidin A2: 24249 ions Rutin: 22096 ions","code":"# Select the csv file name and path batch_file <- system.file(\"extdata\", \"batch_read.csv\",   package = \"MS2extract\" ) # Read the data frame batch_data <- read.csv(batch_file)  # File paths for Procyanidin A2 and Rutin ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" ) Rutin_file <- system.file(\"extdata\",   \"Rutin_neg_20eV.mzXML\",   package = \"MS2extract\" )  # Add file path - User should specified the file path - batch_data$File <- c(ProcA2_file, Rutin_file)  # Checking batch_data data frame dplyr::glimpse(batch_data) #> Rows: 2 #> Columns: 7 #> $ Name            <chr> \"Procyanidin A2\", \"Rutin\" #> $ Formula         <chr> \"C30H24O12\", \"C27H30O16\" #> $ Ionization_mode <chr> \"Negative\", \"Negative\" #> $ min_rt          <int> 163, 162 #> $ max_rt          <int> 180, 171 #> $ COLLISIONENERGY <chr> \" 20 eV\", \" 20 eV\" #> $ File            <chr> \"/home/runner/work/_temp/Library/MS2extract/extdata/Pr… batch_compounds <- batch_import_mzxml(batch_data) #>  #> ── Begining batch import ─────────────────────────────────────────────────────── #>  #> ── -- ── #>  #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 575.11376 and 575.12526 #> • Compound name: Procyanidin A2_Negative_20 #>  #> ── -- ── #>  #> • Processing: Rutin_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 609.14002 and 609.15221 #> • Compound name: Rutin_Negative_20 #>  #> ── End batch import ──────────────────────────────────────────────────────────── # Checking dimension by compound purrr::map(batch_compounds, dim) #> $`Procyanidin A2_Negative_20` #> [1] 24249     6 #>  #> $Rutin_Negative_20 #> [1] 22096     6"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Busing_batch_extract.html","id":"batch_extract_ms2","dir":"Articles","previous_headings":"Introduction > Batch functions","what":"batch_extract_MS2()","title":"2 - Using the MS2extract batch pipeline","text":"Now data imported, can proceed extract intense MS/MS scan compound. case, batch_extract_MS2() functions extra arguments, although arguments remains fairly similar.  using verbose = TRUE, can display MS/MS TIC plot well raw MS/MS spectra intense scan compound.","code":"# Use extract batch extract_MS2 batch_extracted <- batch_extract_MS2(batch_compounds,   verbose = TRUE,   out_list = FALSE )"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Busing_batch_extract.html","id":"batch_detect_mass","dir":"Articles","previous_headings":"Introduction > Batch functions","what":"batch_detect_mass()","title":"2 - Using the MS2extract batch pipeline","text":"Now raw MS/MS spectra, going remove background noise based intensity. batch_detect_mass() arguments core analogue. see decrease number ions, 38 4 ions procyanidin A2 rutin, respectively.","code":"batch_mass_detected <- batch_detect_mass(batch_extracted, # Compound list   normalize = TRUE, # Normalize    min_int = 1  # 1% minimum intensity )  purrr::map(batch_mass_detected, dim) #> $`Procyanidin A2_Negative_20` #> [1] 38  6 #>  #> $Rutin_Negative_20 #> [1] 4 6"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Busing_batch_extract.html","id":"detected-ms2-procyanidin-a2","dir":"Articles","previous_headings":"Introduction > Batch functions > batch_detect_mass()","what":"Detected MS2 Procyanidin A2","title":"2 - Using the MS2extract batch pipeline","text":"","code":"plot_MS2spectra(batch_mass_detected, \"Procyanidin A2_Negative_20\")"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Busing_batch_extract.html","id":"detected-ms2-rutin","dir":"Articles","previous_headings":"Introduction > Batch functions > batch_detect_mass()","what":"Detected MS2 Rutin","title":"2 - Using the MS2extract batch pipeline","text":"","code":"plot_MS2spectra(batch_mass_detected, \"Rutin_Negative_20\")"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Busing_batch_extract.html","id":"write_msp","dir":"Articles","previous_headings":"Introduction","what":"write_msp","title":"2 - Using the MS2extract batch pipeline","text":"contrast previous batch functions, write_msp() able detect user providing single multiple spectra. However, user needs provide metadata compound included resulting .msp database. cleaned MS/MS spectra compound metadata, can proceed export .msp file.","code":"# Reading batch metadata metadata_msp_file <- system.file(\"extdata\",   \"batch_msp_metadata.csv\",   package = \"MS2extract\" )  metadata_msp <- read.csv(metadata_msp_file)  dplyr::glimpse(metadata_msp) #> Rows: 2 #> Columns: 8 #> $ NAME            <chr> \"Procyanidin A2\", \"Rutin\" #> $ PRECURSORTYPE   <chr> \"[M-H]-\", \"[M-H]-\" #> $ FORMULA         <chr> \"C30H24O12\", \"C27H30O16\" #> $ INCHIKEY        <chr> \"NSEWTSAADLNHNH-LSBOWGMISA-N\", \"IKGXIBQEEMLURG-NVPNHPE… #> $ SMILES          <chr> \"C1C(C(OC2=C1C(=CC3=C2C4C(C(O3)(OC5=CC(=CC(=C45)O)O)C6… #> $ IONMODE         <chr> \"Negative\", \"Negative\" #> $ INSTRUMENTTYPE  <chr> \"LC-ESI-QTOF\", \"LC-ESI-QTOF\" #> $ COLLISIONENERGY <chr> \"20 eV\", \"20 eV\" write_msp(   spec = batch_mass_detected,   spec_metadata = metadata_msp,   msp_name = \"ProcA2_Rutin_batch.msp\" )"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Busing_batch_extract.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"2 - Using the MS2extract batch pipeline","text":"","code":"sessionInfo() #> R version 4.3.1 (2023-06-16) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.3 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] MS2extract_0.02.0 #>  #> loaded via a namespace (and not attached): #>   [1] Rdpack_2.5            readxl_1.4.3          rlang_1.1.1           #>   [4] magrittr_2.0.3        clue_0.3-65           compiler_4.3.1        #>   [7] systemfonts_1.0.5     vctrs_0.6.4           stringr_1.5.0         #>  [10] ProtGenerics_1.32.0   pkgconfig_2.0.3       fastmap_1.1.1         #>  [13] backports_1.4.1       labeling_0.4.3        utf8_1.2.3            #>  [16] rmarkdown_2.25        tzdb_0.4.0            preprocessCore_1.62.1 #>  [19] ragg_1.2.6            purrr_1.0.2           xfun_0.40             #>  [22] zlibbioc_1.46.0       cachem_1.0.8          jsonlite_1.8.7        #>  [25] BiocParallel_1.34.2   broom_1.0.5           parallel_4.3.1        #>  [28] cluster_2.1.4         R6_2.5.1              bslib_0.5.1           #>  [31] stringi_1.7.12        limma_3.56.2          car_3.1-2             #>  [34] jquerylib_0.1.4       cellranger_1.1.0      Rcpp_1.0.11           #>  [37] iterators_1.0.14      knitr_1.44            readr_2.1.4           #>  [40] IRanges_2.34.1        tidyselect_1.2.0      abind_1.4-5           #>  [43] yaml_2.3.7            doParallel_1.0.17     codetools_0.2-19      #>  [46] affy_1.78.2           lattice_0.21-8        tibble_3.2.1          #>  [49] plyr_1.8.9            Biobase_2.60.0        withr_2.5.1           #>  [52] evaluate_0.22         OrgMassSpecR_0.5-3    desc_1.4.2            #>  [55] pillar_1.9.0          affyio_1.70.0         BiocManager_1.30.22   #>  [58] ggpubr_0.6.0          carData_3.0-5         foreach_1.5.2         #>  [61] stats4_4.3.1          MSnbase_2.26.0        MALDIquant_1.22.1     #>  [64] ncdf4_1.21            generics_0.1.3        rprojroot_2.0.3       #>  [67] S4Vectors_0.38.2      hms_1.1.3             ggplot2_3.4.4         #>  [70] munsell_0.5.0         scales_1.2.1          glue_1.6.2            #>  [73] tools_4.3.1           mzID_1.38.0           vsn_3.68.0            #>  [76] mzR_2.34.1            ggsignif_0.6.4        fs_1.6.3              #>  [79] XML_3.99-0.14         cowplot_1.1.1         grid_4.3.1            #>  [82] impute_1.74.1         tidyr_1.3.0           rbibutils_2.2.15      #>  [85] MsCoreUtils_1.12.0    colorspace_2.1-0      cli_3.6.1             #>  [88] textshaping_0.3.7     fansi_1.0.5           dplyr_1.1.3           #>  [91] pcaMethods_1.92.0     gtable_0.3.4          rstatix_0.7.2         #>  [94] sass_0.4.7            digest_0.6.33         BiocGenerics_0.46.0   #>  [97] ggrepel_0.9.3         farver_2.1.1          memoise_2.0.1         #> [100] htmltools_0.5.6.1     pkgdown_2.0.7         lifecycle_1.0.3       #> [103] Rdisop_1.60.0         MASS_7.3-60"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Cimport_mzml_explanation.html","id":"goal-of-this-vignette","dir":"Articles","previous_headings":"","what":"Goal of this vignette","title":"3 - Behind the curtains of importing MS/MS data","text":"main objective document explain detailed manner import process MS/MS use import_mzxml(). document organized based main steps take import MS/MS data: Calculating theoretical precursor ion, Filtering MS/MS scans given precursor ion rt range, Finding intense MS/MS scan.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Cimport_mzml_explanation.html","id":"calculating-the-theoretical-precursor-ion","dir":"Articles","previous_headings":"","what":"Calculating the theoretical precursor ion","title":"3 - Behind the curtains of importing MS/MS data","text":"One main inputs, besides .mzML data, met_metadata data frame used import_mzxml(). data frame contains minimum information calculate theoretical precursor ion m/z given following information: Chemical formula, Ionization polarity, ppm (mass error) process can depicted following image.  , going use procyanidin A2 demonstrate process. (1) First, using Rdisop package, calculate theoretical monoisotopic mass. (2) , given specific polarity (Positive Negative), add subtract mass proton calculate theoretical ionized m/z value. (3) Finally, used provided ppm value (10 ppm default) calculate m/z range used filter scan precursor ion value falls within range. can also calculate ppm range ppm_range()","code":"ppm_range(mz = 575.12604, ppm = 10) #> [1] 575.1203 575.1318"},{"path":[]},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Cimport_mzml_explanation.html","id":"using-retention-time-region-of-interest","dir":"Articles","previous_headings":"Filtering MS/MS scans","what":"Using retention time region of interest","title":"3 - Behind the curtains of importing MS/MS data","text":"Although providing retention time window mandatory, highly suggested provide information control regions run look MS/MS scans. provide specific rt ROI, package look intense scan, even scans represent desired scans provided metabolite.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Cimport_mzml_explanation.html","id":"filtering-using-mz-range-and-rt-roi","dir":"Articles","previous_headings":"Filtering MS/MS scans","what":"Filtering using m/z range and rt ROI","title":"3 - Behind the curtains of importing MS/MS data","text":", calculating theoretical m/z range, knowing rt ROI, can look data MS/MS scans information. MS2extract find least one MS/MS scan within given m/z range rt ROI, stop. following example, scan first row meet requirements, discarded, second third scan falls within requirements, kept next steps.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Cimport_mzml_explanation.html","id":"information-about-this-vignette","dir":"Articles","previous_headings":"","what":"Information about this vignette","title":"3 - Behind the curtains of importing MS/MS data","text":"Code creating vignette Date vignette generated. Wallclock time spent generating vignette. R session information.","code":"## Create the vignette library(\"rmarkdown\") system.time(render(\"3_import_mzml_explanation.Rmd\", \"BiocStyle::html_document\"))  ## Extract the R code library(\"knitr\") knit(\"3_import_mzml_explanation.Rmd\", tangle = TRUE) #> [1] \"2023-10-13 21:22:17 UTC\" #> Time difference of 6.309 secs #> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.3.1 (2023-06-16) #>  os       Ubuntu 22.04.3 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  C.UTF-8 #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2023-10-13 #>  pandoc   2.19.2 @ /usr/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package        * version   date (UTC) lib source #>  abind            1.4-5     2016-07-21 [1] RSPM #>  affy             1.78.2    2023-07-16 [1] Bioconductor #>  affyio           1.70.0    2023-04-25 [1] Bioconductor #>  backports        1.4.1     2021-12-13 [1] RSPM #>  bibtex           0.5.1     2023-01-26 [1] RSPM #>  Biobase          2.60.0    2023-04-25 [1] Bioconductor #>  BiocGenerics     0.46.0    2023-04-25 [1] Bioconductor #>  BiocManager      1.30.22   2023-08-08 [1] RSPM #>  BiocParallel     1.34.2    2023-05-22 [1] Bioconductor #>  BiocStyle      * 2.28.1    2023-09-14 [1] Bioconductor #>  bookdown         0.35      2023-08-09 [1] RSPM #>  broom            1.0.5     2023-06-09 [1] RSPM #>  bslib            0.5.1     2023-08-11 [1] RSPM #>  cachem           1.0.8     2023-05-01 [1] RSPM #>  car              3.1-2     2023-03-30 [1] RSPM #>  carData          3.0-5     2022-01-06 [1] RSPM #>  cellranger       1.1.0     2016-07-27 [1] RSPM #>  cli              3.6.1     2023-03-23 [1] RSPM #>  clue             0.3-65    2023-09-23 [1] RSPM #>  cluster          2.1.4     2022-08-22 [3] CRAN (R 4.3.1) #>  codetools        0.2-19    2023-02-01 [3] CRAN (R 4.3.1) #>  colorspace       2.1-0     2023-01-23 [1] RSPM #>  desc             1.4.2     2022-09-08 [1] RSPM #>  digest           0.6.33    2023-07-07 [1] RSPM #>  doParallel       1.0.17    2022-02-07 [1] RSPM #>  dplyr            1.1.3     2023-09-03 [1] RSPM #>  evaluate         0.22      2023-09-29 [1] RSPM #>  fansi            1.0.5     2023-10-08 [1] RSPM #>  fastmap          1.1.1     2023-02-24 [1] RSPM #>  foreach          1.5.2     2022-02-02 [1] RSPM #>  fs               1.6.3     2023-07-20 [1] RSPM #>  generics         0.1.3     2022-07-05 [1] RSPM #>  ggplot2          3.4.4     2023-10-12 [1] RSPM #>  ggpubr           0.6.0     2023-02-10 [1] RSPM #>  ggrepel          0.9.3     2023-02-03 [1] RSPM #>  ggsignif         0.6.4     2022-10-13 [1] RSPM #>  glue             1.6.2     2022-02-24 [1] RSPM #>  gtable           0.3.4     2023-08-21 [1] RSPM #>  hms              1.1.3     2023-03-21 [1] RSPM #>  htmltools        0.5.6.1   2023-10-06 [1] RSPM #>  httr             1.4.7     2023-08-15 [1] RSPM #>  impute           1.74.1    2023-05-02 [1] Bioconductor #>  IRanges          2.34.1    2023-06-22 [1] Bioconductor #>  iterators        1.0.14    2022-02-05 [1] RSPM #>  jquerylib        0.1.4     2021-04-26 [1] RSPM #>  jsonlite         1.8.7     2023-06-29 [1] RSPM #>  knitr            1.44      2023-09-11 [1] RSPM #>  lattice          0.21-8    2023-04-05 [3] CRAN (R 4.3.1) #>  lifecycle        1.0.3     2022-10-07 [1] RSPM #>  limma            3.56.2    2023-06-04 [1] Bioconductor #>  lubridate        1.9.3     2023-09-27 [1] RSPM #>  magrittr         2.0.3     2022-03-30 [1] RSPM #>  MALDIquant       1.22.1    2023-03-20 [1] RSPM #>  MASS             7.3-60    2023-05-04 [3] CRAN (R 4.3.1) #>  memoise          2.0.1     2021-11-26 [1] RSPM #>  MS2extract     * 0.02.0    2023-10-13 [1] local #>  MsCoreUtils      1.12.0    2023-04-25 [1] Bioconductor #>  MSnbase          2.26.0    2023-04-25 [1] Bioconductor #>  munsell          0.5.0     2018-06-12 [1] RSPM #>  mzID             1.38.0    2023-04-25 [1] Bioconductor #>  mzR              2.34.1    2023-06-19 [1] Bioconductor #>  ncdf4            1.21      2023-01-07 [1] RSPM #>  OrgMassSpecR     0.5-3     2017-08-13 [1] RSPM #>  pcaMethods       1.92.0    2023-04-25 [1] Bioconductor #>  pillar           1.9.0     2023-03-22 [1] RSPM #>  pkgconfig        2.0.3     2019-09-22 [1] RSPM #>  pkgdown          2.0.7     2022-12-14 [1] any (@2.0.7) #>  plyr             1.8.9     2023-10-02 [1] RSPM #>  preprocessCore   1.62.1    2023-05-02 [1] Bioconductor #>  ProtGenerics     1.32.0    2023-04-25 [1] Bioconductor #>  purrr            1.0.2     2023-08-10 [1] RSPM #>  R6               2.5.1     2021-08-19 [1] RSPM #>  ragg             1.2.6     2023-10-10 [1] RSPM #>  rbibutils        2.2.15    2023-08-21 [1] RSPM #>  Rcpp             1.0.11    2023-07-06 [1] RSPM #>  Rdisop           1.60.0    2023-04-25 [1] Bioconductor #>  Rdpack           2.5       2023-08-21 [1] RSPM #>  readr            2.1.4     2023-02-10 [1] RSPM #>  readxl           1.4.3     2023-07-06 [1] RSPM #>  RefManageR     * 1.4.0     2022-09-30 [1] RSPM #>  rlang            1.1.1     2023-04-28 [1] RSPM #>  rmarkdown        2.25      2023-09-18 [1] RSPM #>  rprojroot        2.0.3     2022-04-02 [1] RSPM #>  rstatix          0.7.2     2023-02-01 [1] RSPM #>  S4Vectors        0.38.2    2023-09-22 [1] Bioconductor #>  sass             0.4.7     2023-07-15 [1] RSPM #>  scales           1.2.1     2022-08-20 [1] RSPM #>  sessioninfo    * 1.2.2     2021-12-06 [1] RSPM #>  stringi          1.7.12    2023-01-11 [1] RSPM #>  stringr          1.5.0     2022-12-02 [1] RSPM #>  systemfonts      1.0.5     2023-10-09 [1] RSPM #>  textshaping      0.3.7     2023-10-09 [1] RSPM #>  tibble           3.2.1     2023-03-20 [1] RSPM #>  tidyr            1.3.0     2023-01-24 [1] RSPM #>  tidyselect       1.2.0     2022-10-10 [1] RSPM #>  timechange       0.2.0     2023-01-11 [1] RSPM #>  tzdb             0.4.0     2023-05-12 [1] RSPM #>  utf8             1.2.3     2023-01-31 [1] RSPM #>  vctrs            0.6.4     2023-10-12 [1] RSPM #>  vsn              3.68.0    2023-04-25 [1] Bioconductor #>  xfun             0.40      2023-08-09 [1] RSPM #>  XML              3.99-0.14 2023-03-19 [1] RSPM #>  xml2             1.3.5     2023-07-06 [1] RSPM #>  yaml             2.3.7     2023-01-23 [1] RSPM #>  zlibbioc         1.46.0    2023-04-25 [1] Bioconductor #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.3.1/lib/R/site-library #>  [3] /opt/R/4.3.1/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Cimport_mzml_explanation.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"3 - Behind the curtains of importing MS/MS data","text":"vignette generated using BiocStyle (Oleś, 2023) knitr (Xie, 2023) rmarkdown (Allaire, Xie, Dervieux, McPherson, Luraschi, Ushey, Atkins, Wickham, Cheng, Chang, Iannone, 2023) running behind scenes. Citations made RefManageR (McLean, 2017). [1] J. Allaire, Y. Xie, C. Dervieux, et al. rmarkdown: Dynamic Documents R. R package version 2.25. 2023. URL: https://github.com/rstudio/rmarkdown. [2] M. W. McLean. “RefManageR: Import Manage BibTeX BibLaTeX References R”. : Journal Open Source Software (2017). DOI: 10.21105/joss.00338. [3] . Oleś. BiocStyle: Standard styles vignettes Bioconductor documents. R package version 2.28.1. 2023. DOI: 10.18129/B9.bioc.BiocStyle. URL: https://bioconductor.org/packages/BiocStyle. [4] Y. Xie. knitr: General-Purpose Package Dynamic Report Generation R. R package version 1.44. 2023. URL: https://yihui.org/knitr/.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Dmsconvert_4_MS2extract.html","id":"goal-of-this-document","dir":"Articles","previous_headings":"","what":"Goal of this document","title":"4 - Using MSconvert to filter useful standard MS/MS data","text":"document, find information describing multiple scenarios use MSconvert order transform raw MS/MS data .mzMl mzXML format order imported MS2extract. , explore different scenarios might find useful depending MS/MS data collection approach. explained scenarios : Converting .mzML entire run, Trimming specific retention time, Note: fourth vignette package find terms unclear, familiar concepts, please visit previous vignettes (Package introduction, Batch mode introduction, Importing MS/MS data).","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Dmsconvert_4_MS2extract.html","id":"concept-of-ms2extract","dir":"Articles","previous_headings":"","what":"Concept of MS2extract","title":"4 - Using MSconvert to filter useful standard MS/MS data","text":"moving hands-application, like clarify definitions software help improve explanation following case examples. MS2extract concept can summarized two main subsequent tasks; (1) look scans specific precursor ion m/z, (2) extract MS/MS fragmentation pattern. Therefore, data file (.mzML) must contain least one MS/MS scan specified precursor ion extract MS/MS data.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Dmsconvert_4_MS2extract.html","id":"case-1-converting-to--mzml-the-entire-run","dir":"Articles","previous_headings":"","what":"Case 1: Converting to .mzML the entire run","title":"4 - Using MSconvert to filter useful standard MS/MS data","text":"case, although optimal approach, get job done, data meets requirement. Requirement 1: precursor ion standard produce intense MS/MS signal entire run. Requirement 2: compositional isomers run, elute different retention times, must provide different retention times windows. Since MS2extract searches intense MS/MS scan, can one metabolite per run provide different retention time windows. Since package works MS/MS data, going keep scans MS/MS data. Therefore, MSconvert filters :","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Dmsconvert_4_MS2extract.html","id":"case-2-trimming-for-specific-retention-time","dir":"Articles","previous_headings":"","what":"Case 2: Trimming for specific retention time","title":"4 - Using MSconvert to filter useful standard MS/MS data","text":"probably efficient approach convert raw data files, since already know retention time metabolite. , can use scanTime filter. Remember, scan time converted seconds, minutes. used approach build entire PhenolicsDB repository, can find retention time window metabolite. following example, using procyanidin B2 standard data, elution time 138 (s), minimum maximum retention time 133 145 (s), respectively. Therefore, MSconvert task look like following image.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Dmsconvert_4_MS2extract.html","id":"information-about-this-vignette","dir":"Articles","previous_headings":"","what":"Information about this vignette","title":"4 - Using MSconvert to filter useful standard MS/MS data","text":"Code creating vignette Date vignette generated. Wallclock time spent generating vignette. R session information.","code":"## Create the vignette library(\"rmarkdown\") system.time(render(\"4_msconvert_4_MS2extract.Rmd\", \"BiocStyle::html_document\"))  ## Extract the R code library(\"knitr\") knit(\"4_msconvert_4_MS2extract.Rmd\", tangle = TRUE) #> [1] \"2023-10-13 21:22:21 UTC\" #> Time difference of 0.677 secs #> ─ Session info ─────────────────────────────────────────────────────────────────────────────────────────────────────── #>  setting  value #>  version  R version 4.3.1 (2023-06-16) #>  os       Ubuntu 22.04.3 LTS #>  system   x86_64, linux-gnu #>  ui       X11 #>  language en #>  collate  C.UTF-8 #>  ctype    C.UTF-8 #>  tz       UTC #>  date     2023-10-13 #>  pandoc   2.19.2 @ /usr/bin/ (via rmarkdown) #>  #> ─ Packages ─────────────────────────────────────────────────────────────────────────────────────────────────────────── #>  package     * version date (UTC) lib source #>  backports     1.4.1   2021-12-13 [1] RSPM #>  bibtex        0.5.1   2023-01-26 [1] RSPM #>  BiocManager   1.30.22 2023-08-08 [1] RSPM #>  BiocStyle   * 2.28.1  2023-09-14 [1] Bioconductor #>  bookdown      0.35    2023-08-09 [1] RSPM #>  bslib         0.5.1   2023-08-11 [1] RSPM #>  cachem        1.0.8   2023-05-01 [1] RSPM #>  cli           3.6.1   2023-03-23 [1] RSPM #>  desc          1.4.2   2022-09-08 [1] RSPM #>  digest        0.6.33  2023-07-07 [1] RSPM #>  evaluate      0.22    2023-09-29 [1] RSPM #>  fastmap       1.1.1   2023-02-24 [1] RSPM #>  fs            1.6.3   2023-07-20 [1] RSPM #>  generics      0.1.3   2022-07-05 [1] RSPM #>  glue          1.6.2   2022-02-24 [1] RSPM #>  htmltools     0.5.6.1 2023-10-06 [1] RSPM #>  httr          1.4.7   2023-08-15 [1] RSPM #>  jquerylib     0.1.4   2021-04-26 [1] RSPM #>  jsonlite      1.8.7   2023-06-29 [1] RSPM #>  knitr         1.44    2023-09-11 [1] RSPM #>  lifecycle     1.0.3   2022-10-07 [1] RSPM #>  lubridate     1.9.3   2023-09-27 [1] RSPM #>  magrittr      2.0.3   2022-03-30 [1] RSPM #>  memoise       2.0.1   2021-11-26 [1] RSPM #>  pkgdown       2.0.7   2022-12-14 [1] any (@2.0.7) #>  plyr          1.8.9   2023-10-02 [1] RSPM #>  purrr         1.0.2   2023-08-10 [1] RSPM #>  R6            2.5.1   2021-08-19 [1] RSPM #>  ragg          1.2.6   2023-10-10 [1] RSPM #>  Rcpp          1.0.11  2023-07-06 [1] RSPM #>  RefManageR  * 1.4.0   2022-09-30 [1] RSPM #>  rlang         1.1.1   2023-04-28 [1] RSPM #>  rmarkdown     2.25    2023-09-18 [1] RSPM #>  rprojroot     2.0.3   2022-04-02 [1] RSPM #>  sass          0.4.7   2023-07-15 [1] RSPM #>  sessioninfo * 1.2.2   2021-12-06 [1] RSPM #>  stringi       1.7.12  2023-01-11 [1] RSPM #>  stringr       1.5.0   2022-12-02 [1] RSPM #>  systemfonts   1.0.5   2023-10-09 [1] RSPM #>  textshaping   0.3.7   2023-10-09 [1] RSPM #>  timechange    0.2.0   2023-01-11 [1] RSPM #>  vctrs         0.6.4   2023-10-12 [1] RSPM #>  xfun          0.40    2023-08-09 [1] RSPM #>  xml2          1.3.5   2023-07-06 [1] RSPM #>  yaml          2.3.7   2023-01-23 [1] RSPM #>  #>  [1] /home/runner/work/_temp/Library #>  [2] /opt/R/4.3.1/lib/R/site-library #>  [3] /opt/R/4.3.1/lib/R/library #>  #> ──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────"},{"path":"https://cooperstonelab.github.io/MS2extract/articles/Dmsconvert_4_MS2extract.html","id":"bibliography","dir":"Articles","previous_headings":"","what":"Bibliography","title":"4 - Using MSconvert to filter useful standard MS/MS data","text":"vignette generated using BiocStyle (Oleś, 2023) knitr (Xie, 2023) rmarkdown (Allaire, Xie, Dervieux, McPherson, Luraschi, Ushey, Atkins, Wickham, Cheng, Chang, Iannone, 2023) running behind scenes. Citations made RefManageR (McLean, 2017). [1] J. Allaire, Y. Xie, C. Dervieux, et al. rmarkdown: Dynamic Documents R. R package version 2.25. 2023. URL: https://github.com/rstudio/rmarkdown. [2] M. W. McLean. “RefManageR: Import Manage BibTeX BibLaTeX References R”. : Journal Open Source Software (2017). DOI: 10.21105/joss.00338. [3] . Oleś. BiocStyle: Standard styles vignettes Bioconductor documents. R package version 2.28.1. 2023. DOI: 10.18129/B9.bioc.BiocStyle. URL: https://bioconductor.org/packages/BiocStyle. [4] Y. Xie. knitr: General-Purpose Package Dynamic Report Generation R. R package version 1.44. 2023. URL: https://yihui.org/knitr/.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cristian Quiroz-Moreno. Author, maintainer. Jessica Cooperstone. Author.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Quiroz-Moreno C, Cooperstone J (2023). MS2extract: Targeted MS/MS Spectra Extraction -house Compound Library Creation. R package version 0.02.0, https://cooperstonelab.github.io/MS2extract/.","code":"@Manual{,   title = {MS2extract: Targeted MS/MS Spectra Extraction for In-house Compound Library Creation},   author = {Cristian Quiroz-Moreno and Jessica Cooperstone},   year = {2023},   note = {R package version 0.02.0},   url = {https://cooperstonelab.github.io/MS2extract/}, }"},{"path":"https://cooperstonelab.github.io/MS2extract/index.html","id":"ms2extract","dir":"","previous_headings":"","what":"Targeted MS/MS Spectra Extraction for In-house Compound Library Creation","title":"Targeted MS/MS Spectra Extraction for In-house Compound Library Creation","text":"MS2extract website goal MS2extract provide tool import MS/MS data known standards material targeted extract MS/MS spectra order create -house MS/MS library. package aids creation automatization -house MS/MS libraries package support algorithms annotate MS/MS data","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Targeted MS/MS Spectra Extraction for In-house Compound Library Creation","text":"can install development version MS2extract GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"CooperstoneLab/MS2extract\")"},{"path":[]},{"path":"https://cooperstonelab.github.io/MS2extract/index.html","id":"ppm-calculation","dir":"","previous_headings":"Example","what":"ppm calculation","title":"Targeted MS/MS Spectra Extraction for In-house Compound Library Creation","text":"ppm_range() can compute mass error given ppm tolerance.","code":"library(MS2extract) #> Warning in fun(libname, pkgname): mzR has been built against a different Rcpp version (1.0.10) #> than is installed on your system (1.0.11). This might lead to errors #> when loading mzR. If you encounter such issues, please send a report, #> including the output of sessionInfo() to the Bioc support forum at  #> https://support.bioconductor.org/. For details see also #> https://github.com/sneumann/mzR/wiki/mzR-Rcpp-compiler-linker-issue. ## calculating ppm range chlorogenic_acid_pos <- 355.1023 ppm_error <- 10 # Calculate ranges ppm_range(mz = chlorogenic_acid_pos, ppm = ppm_error) #> [1] 355.0987 355.1059"},{"path":"https://cooperstonelab.github.io/MS2extract/index.html","id":"importing-mzxmlmzml-files","dir":"","previous_headings":"Example","what":"Importing .mzXML/.mzML files","title":"Targeted MS/MS Spectra Extraction for In-house Compound Library Creation","text":"can import .mzXML .mzML files import_mzxml() function. import MS/MS scans data frame. case, going work Procyanidin A2 spectra negative mode, collision energy 20 eV.","code":"# File path ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" ) # Compound data ProcA2_data <- data.frame(Formula = \"C30H24O12\", Ionization_mode = \"Negative\")  ProcA2_raw <- import_mzxml(ProcA2_file, ProcA2_data) #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 575.11376 and 575.12526"},{"path":"https://cooperstonelab.github.io/MS2extract/index.html","id":"extracting-procyanidin-a2-spectra","dir":"","previous_headings":"Example","what":"Extracting Procyanidin A2 spectra","title":"Targeted MS/MS Spectra Extraction for In-house Compound Library Creation","text":", .mzXML file contains MS/MS scans retention time window Procyanidin A2 elutes. extract_MS2() function, users can detect extract intense MS/MS scan, displays TIC indicating scan intense  function returns list, contains MS/MS spectra, extracted MS/MS EIC plot. Since extracted MS/MS spectra contains low intensity signals (.e. background noise), can remove using detect_mass() function. raw MS2 spectra contains 6226 signals majority low intensity signals (background noise).","code":"ProcA2_ext <- extract_MS2(ProcA2_raw, verbose = TRUE, out_list = FALSE) dim(ProcA2_ext) #> [1] 6226    6"},{"path":"https://cooperstonelab.github.io/MS2extract/index.html","id":"detecting-masses","dir":"","previous_headings":"Example","what":"Detecting masses","title":"Targeted MS/MS Spectra Extraction for In-house Compound Library Creation","text":"objective remove low intensity signals, can detect masses allowing normalization base peak filtering signals minimum threshold, detecting mass absolute signal intensity. , detect masses normalization minimum intensity 1% Now can see x-axis MS/MS spectra reduced 575 m/z since low intensity signals removed.  Although resulting MS/MS spectra contains 38 signals (ions), going include signals abundance greater 10% relative intensity displaying purposes","code":"ProcA2_detected <- detect_mass(ProcA2_ext,   normalize = TRUE, # Allow normalization   min_int = 1 # 1% as minimum intensity )   dim(ProcA2_detected) #> [1] 38  6 plot_MS2spectra(ProcA2_detected) dplyr::filter(ProcA2_detected, intensity > 10) #> # A tibble: 9 × 6 #> # Groups:   Formula, CE [1] #>      mz intensity mz_precursor    rt    CE Formula   #>   <dbl>     <dbl>        <dbl> <dbl> <dbl> <chr>     #> 1  285.        62         575.  171.    20 C30H24O12 #> 2  289.        48         575.  171.    20 C30H24O12 #> 3  407.        16         575.  171.    20 C30H24O12 #> 4  423.        53         575.  171.    20 C30H24O12 #> 5  449.        51         575.  171.    20 C30H24O12 #> 6  452.        15         575.  171.    20 C30H24O12 #> 7  539.        22         575.  171.    20 C30H24O12 #> 8  575.       100         575.  171.    20 C30H24O12 #> 9  576.        13         575.  171.    20 C30H24O12"},{"path":"https://cooperstonelab.github.io/MS2extract/index.html","id":"comparing-two-msms-spectra-with-cosine-score","dir":"","previous_headings":"Example","what":"Comparing two MS/MS spectra with cosine score","title":"Targeted MS/MS Spectra Extraction for In-house Compound Library Creation","text":"purpose section compare two MS/MS spectra extracted using package using PCDL, compound library developed Agilent. Thus, include MS/MS spectra extracted PCDL use cosine similarity score compare compare_spectra() function.","code":"# MS2 PCDL spectra ProcA2_pcdl_fl <- system.file(\"extdata\",   \"ProcA2_neg_20eV_PCDL.csv\",   package = \"MS2extract\" ) # Reading the spectra ProcA2_PCDL <- read.csv(ProcA2_pcdl_fl)  # Comparing both spectra compare_spectra(ProcA2_detected, ProcA2_PCDL) #> $similarity.score #> [1] 0.9953542 #>  #> $alignment #>          mz intensity.top intensity.bottom #> 1  125.0242            10               10 #> 2  285.0405            62               59 #> 3  289.0716            48               45 #> 4  407.0767            16               17 #> 5  423.0720            53               53 #> 6  449.0876            51               50 #> 7  452.0742            15               20 #> 8  539.0978            22               22 #> 9  575.1195           100              100 #> 10 576.1221            13                0 #>  #> $plot #> gTree[GRID.gTree.160]"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/CE_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Collision Energy Values — CE_filter","title":"Filter Collision Energy Values — CE_filter","text":"Internal Function *","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/CE_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Collision Energy Values — CE_filter","text":"","code":"CE_filter(spec, spec_metadata)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/CE_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Collision Energy Values — CE_filter","text":"spec MS/MS spectra spec_metadata MS/MS spectra metadata containing COLLISIONENERGY one provided columns.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/CE_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Collision Energy Values — CE_filter","text":"function evaluate collision energy value provided spe_metadata data frame, matches value collision energy value found MS/MS data. function uses readr::parse_number()  extract numeric value provided COLLISIONENERGY column.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/MS2extract-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MS2extract: Targeted MS/MS Spectra Extraction for In-house Compound Library Creation — MS2extract-package","title":"MS2extract: Targeted MS/MS Spectra Extraction for In-house Compound Library Creation — MS2extract-package","text":"mass spectrometry toolbox objective importing mass spectrometry data, extracts desired MS/MS spectra -house MS/MS compound library creation. Subsequently, users can export spectra .msp file format, resulting compound database use compound identification tasks. worth note package annotate mass spectrometry data.","code":""},{"path":[]},{"path":"https://cooperstonelab.github.io/MS2extract/reference/MS2extract-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MS2extract: Targeted MS/MS Spectra Extraction for In-house Compound Library Creation — MS2extract-package","text":"Maintainer: Cristian Quiroz-Moreno cristianquirozd1997@gmail.com (ORCID) Authors: Jessica Cooperstone cooperstone.1@osu.edu (ORCID)","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/add_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate additional .msp fields — add_attributes","title":"Evaluate additional .msp fields — add_attributes","text":"Internal function","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/add_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate additional .msp fields — add_attributes","text":"","code":"add_attributes(msp_attribute, spec_metadata, msp_backbone)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/add_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate additional .msp fields — add_attributes","text":"msp_attribute string name .msp field spec_metadata data frame containing .msp field values msp_backbone constructed .msp string export","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/add_attributes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Evaluate additional .msp fields — add_attributes","text":"internal function evaluate non-critical .msp fields included .msp file. function create empty field evaluated fields either listed NA missing metadata table. evaluated additional .msp fields : INCHIKEY  SMILES  CCS  COLLISIONENERGY  INSTRUMENTTYPE","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/assign_scan_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract MS/MS spectrum info out of the list — assign_scan_id","title":"Extract MS/MS spectrum info out of the list — assign_scan_id","text":"Internal function","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/assign_scan_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract MS/MS spectrum info out of the list — assign_scan_id","text":"","code":"assign_scan_id(scan_list)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/assign_scan_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract MS/MS spectrum info out of the list — assign_scan_id","text":"scan_list list created MS2extract::read_mzxml()","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/assign_scan_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract MS/MS spectrum info out of the list — assign_scan_id","text":"data.frame containing mz ion m/z value intensity ion intensity count precursor_mz precursor ion rt retention time","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/assign_scan_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract MS/MS spectrum info out of the list — assign_scan_id","text":"function extracts spectra per scan tidy format given list created MS2extract:::read_mzxml()","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/batch_detect_mass.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect masses for multiple spectra — batch_detect_mass","title":"Detect masses for multiple spectra — batch_detect_mass","text":"function takes multiple spectra imported batch_import_mzxml() function. , parses argument detect_mass() function. Briefly, similarly  mass detection step MZmine workflow, detect_mass() filters low intensity signals. , can opt detect masses raw ion intensity (ion counts), normalize spectra  abundant ion, detect intensity percentage ion. default set include ions least 1% abundant ion.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/batch_detect_mass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect masses for multiple spectra — batch_detect_mass","text":"","code":"batch_detect_mass(batch_spect, normalize = TRUE, min_int = 1)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/batch_detect_mass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect masses for multiple spectra — batch_detect_mass","text":"batch_spect list MS/MS scans imported batch_import_mzxml() function. normalize boolean indicating MS/MS spectra normalized base peak proceeding filter low intensity signals (normalize  = TRUE), normalize = FALSE  user provide minimum ion count. min_int integer minimum ion intensity","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/batch_detect_mass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect masses for multiple spectra — batch_detect_mass","text":"","code":"# Select the csv file name and path batch_file <- system.file(\"extdata\", \"batch_read.csv\",   package = \"MS2extract\" ) # Read the data frame batch_data <- read.csv(batch_file)  # File paths for Procyanidin A2 and Rutin ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" ) Rutin_file <- system.file(\"extdata\",   \"Rutin_neg_20eV.mzXML\",   package = \"MS2extract\" )  # Add file path - User should specified the file path - batch_data$File <- c(ProcA2_file, Rutin_file)  # Checking batch_data data frame batch_data #>             Name   Formula Ionization_mode min_rt max_rt COLLISIONENERGY #> 1 Procyanidin A2 C30H24O12        Negative    163    180           20 eV #> 2          Rutin C27H30O16        Negative    162    171           20 eV #>                                                                              File #> 1 /home/runner/work/_temp/Library/MS2extract/extdata/ProcyanidinA2_neg_20eV.mzXML #> 2         /home/runner/work/_temp/Library/MS2extract/extdata/Rutin_neg_20eV.mzXML  # Using batch import to import multiple compounds batch_compounds <- batch_import_mzxml(batch_data) #>  #> ── Begining batch import ─────────────────────────────────────────────────────── #>  #> ── -- ── #>  #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 575.11376 and 575.12526 #> • Compound name: Procyanidin A2_Negative_20 #>  #> ── -- ── #>  #> • Processing: Rutin_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 609.14002 and 609.15221 #> • Compound name: Rutin_Negative_20 #>  #> ── End batch import ──────────────────────────────────────────────────────────── # Checking dimension by compound # Procyanidin A2: 24249 ions # Rutin: 22096 ions purrr::map(batch_compounds, dim) #> $`Procyanidin A2_Negative_20` #> [1] 24249     6 #>  #> $Rutin_Negative_20 #> [1] 22096     6 #>   # Extracting MS2 spec batch_extracted <- batch_extract_MS2(batch_compounds,   verbose = TRUE,   out_list = FALSE ) #> Warning: `position_stack()` requires non-overlapping x intervals #> Warning: `position_stack()` requires non-overlapping x intervals    # Batch detect mass batch_mass_detected <- batch_detect_mass(batch_extracted, # Compound list   normalize = TRUE, # Normalize   min_int = 1 ) # Minimum intensity  # Checking dimension by compound # Procyanidin A2: 38 ions # Rutin: 4 ions purrr::map(batch_mass_detected, dim) #> $`Procyanidin A2_Negative_20` #> [1] 38  6 #>  #> $Rutin_Negative_20 #> [1] 4 6 #>"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/batch_extract_MS2.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the most MS/MS intense scan from batch spectra — batch_extract_MS2","title":"Extract the most MS/MS intense scan from batch spectra — batch_extract_MS2","text":"function takes multiple spectra imported batch_import_mzxml() function. , passes spectra version extract_MS2(). Briefly, function takes series MS/MS spectra, selects intense scan extracts MS/MS spectra . Additionally, plots MS/MS TIC chromatogram colors intense scan red circle, precursor ion blue diamond","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/batch_extract_MS2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the most MS/MS intense scan from batch spectra — batch_extract_MS2","text":"","code":"batch_extract_MS2(batch_spect, verbose = TRUE, out_list = TRUE)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/batch_extract_MS2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the most MS/MS intense scan from batch spectra — batch_extract_MS2","text":"batch_spect list created batch_import_mzxml() verbose boolean indicating MS/MS TIC chromatogram displayed out_list boolean expressing output list containing MS/MS spectra plus TIC chromatogram (out_list = TRUE), data frame MS/MS spectra (out_lists = FALSE).","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/batch_extract_MS2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the most MS/MS intense scan from batch spectra — batch_extract_MS2","text":"","code":"# Select the csv file name and path batch_file <- system.file(\"extdata\", \"batch_read.csv\",   package = \"MS2extract\" ) # Read the data frame batch_data <- read.csv(batch_file)  # File paths for Procyanidin A2 and Rutin ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" ) Rutin_file <- system.file(\"extdata\",   \"Rutin_neg_20eV.mzXML\",   package = \"MS2extract\" )  # Add file path - User should specified the file path - batch_data$File <- c(ProcA2_file, Rutin_file)  # Checking batch_data data frame batch_data #>             Name   Formula Ionization_mode min_rt max_rt COLLISIONENERGY #> 1 Procyanidin A2 C30H24O12        Negative    163    180           20 eV #> 2          Rutin C27H30O16        Negative    162    171           20 eV #>                                                                              File #> 1 /home/runner/work/_temp/Library/MS2extract/extdata/ProcyanidinA2_neg_20eV.mzXML #> 2         /home/runner/work/_temp/Library/MS2extract/extdata/Rutin_neg_20eV.mzXML  # Using batch import to import multiple compounds batch_compounds <- batch_import_mzxml(batch_data) #>  #> ── Begining batch import ─────────────────────────────────────────────────────── #>  #> ── -- ── #>  #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 575.11376 and 575.12526 #> • Compound name: Procyanidin A2_Negative_20 #>  #> ── -- ── #>  #> • Processing: Rutin_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 609.14002 and 609.15221 #> • Compound name: Rutin_Negative_20 #>  #> ── End batch import ────────────────────────────────────────────────────────────  # Checking dimension by compound # Procyanidin A2: 24249 ions # Rutin: 22096 ions purrr::map(batch_compounds, dim) #> $`Procyanidin A2_Negative_20` #> [1] 24249     6 #>  #> $Rutin_Negative_20 #> [1] 22096     6 #>   # Use extract batch extract_MS2 batch_extracted <- batch_extract_MS2(batch_compounds,   verbose = TRUE,   out_list = FALSE ) #> Warning: `position_stack()` requires non-overlapping x intervals #> Warning: `position_stack()` requires non-overlapping x intervals"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/batch_import_mzxml.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch import mzxml files — batch_import_mzxml","title":"Batch import mzxml files — batch_import_mzxml","text":"function imports multiple .mzXML/.mzML files named list. takes data frame containing basic information metabolites file name (including file path), Chemical formula, Ionization mode, Collision Energy, required fields. Additionally, Region Interest (ROI) can provided narrow elution window.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/batch_import_mzxml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch import mzxml files — batch_import_mzxml","text":"","code":"batch_import_mzxml(compounds_dt)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/batch_import_mzxml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch import mzxml files — batch_import_mzxml","text":"compounds_dt data frame containing following columns. Name name compound Formula compound's chemical formula Ionization_mode ionization mode set data collection (Positive Negative mode allowed). File filename .mzXML/.mzML file inluding path COLLISIONENERGY Collision energy applied MS/MS fragmentation Additionally, can provide ROI adding two columns data frame. min_rt double, minumim retention time keep max_rt double maximum retention time keep","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/batch_import_mzxml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch import mzxml files — batch_import_mzxml","text":"list n elements, n number compounds provided compounds_dt","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/batch_import_mzxml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch import mzxml files — batch_import_mzxml","text":"","code":"# Select the csv file name and path batch_file <- system.file(\"extdata\", \"batch_read.csv\",   package = \"MS2extract\" ) # Read the data frame batch_data <- read.csv(batch_file)  # File paths for Procyanidin A2 and Rutin ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" ) Rutin_file <- system.file(\"extdata\",   \"Rutin_neg_20eV.mzXML\",   package = \"MS2extract\" )  # Add file path - User should specified the file path - batch_data$File <- c(ProcA2_file, Rutin_file)  # Checking batch_data data frame batch_data #>             Name   Formula Ionization_mode min_rt max_rt COLLISIONENERGY #> 1 Procyanidin A2 C30H24O12        Negative    163    180           20 eV #> 2          Rutin C27H30O16        Negative    162    171           20 eV #>                                                                              File #> 1 /home/runner/work/_temp/Library/MS2extract/extdata/ProcyanidinA2_neg_20eV.mzXML #> 2         /home/runner/work/_temp/Library/MS2extract/extdata/Rutin_neg_20eV.mzXML  # Using batch import to import multiple compounds batch_compounds <- batch_import_mzxml(batch_data) #>  #> ── Begining batch import ─────────────────────────────────────────────────────── #>  #> ── -- ── #>  #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 575.11376 and 575.12526 #> • Compound name: Procyanidin A2_Negative_20 #>  #> ── -- ── #>  #> • Processing: Rutin_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 609.14002 and 609.15221 #> • Compound name: Rutin_Negative_20 #>  #> ── End batch import ────────────────────────────────────────────────────────────  # Checking dimension by compound # Procyanidin A2: 24249 ions # Rutin: 22096 ions purrr::map(batch_compounds, dim) #> $`Procyanidin A2_Negative_20` #> [1] 24249     6 #>  #> $Rutin_Negative_20 #> [1] 22096     6 #>"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_MS_data_order.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if spec MS/MS data and spec_metadata is proper aligned — check_MS_data_order","title":"Check if spec MS/MS data and spec_metadata is proper aligned — check_MS_data_order","text":"Internal Function *","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_MS_data_order.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if spec MS/MS data and spec_metadata is proper aligned — check_MS_data_order","text":"","code":"check_MS_data_order(spec = NULL, spec_metadata = NULL)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_MS_data_order.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if spec MS/MS data and spec_metadata is proper aligned — check_MS_data_order","text":"spec data frame containing extracted MS/MS spectra, following columns required: mz_precursor  rt  mz  intensity  spec_metadata data frame containing values including resulting .msp file. following columns required vital information .msp output. NAME  PRECURSORTYPE  FORMULA  RETENTIONTIME  IONMODE  COLLISIONENERGY","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_MS_data_order.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if spec MS/MS data and spec_metadata is proper aligned — check_MS_data_order","text":"function intended check order key spec data spec metadata. keys aligned, code continues. keys aligned, aborts. function try align keys, keys ordered back-end key alignment expected. Checks function include: Check equal number MS/MS data number observations spec_metadata key names aligned","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_gnps_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Checking names in the provided GNPS metadata — check_gnps_metadata","title":"Checking names in the provided GNPS metadata — check_gnps_metadata","text":"Internal Function *","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_gnps_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checking names in the provided GNPS metadata — check_gnps_metadata","text":"","code":"check_gnps_metadata(met_metadata)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_gnps_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checking names in the provided GNPS metadata — check_gnps_metadata","text":"met_metadata library metadata provided according GNPS template. can check working example template retrieving GNPS_template.xlsx file using: system.file(\"extdata\", \"GNPS_template.xlsx\", package = \"MS2extract\").","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_gnps_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checking names in the provided GNPS metadata — check_gnps_metadata","text":"function evaluates names provided table  (met_metadata) matches required column names.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Check compound metadata — check_metadata","title":"Check compound metadata — check_metadata","text":"Internal function","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check compound metadata — check_metadata","text":"","code":"check_metadata(met_metadata)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check compound metadata — check_metadata","text":"met_metadata data frame least Formula Ionization_mode","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check compound metadata — check_metadata","text":"double ionized mass compound.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_metadata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check compound metadata — check_metadata","text":"function evaluates metadata expected column names. , calculates theoretical exact mass compound using given formula ionization mode obtain charged mass. Required values Formula character, compound chemical formula Ionization_mode character, Positive Negative values accepted","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_specdt_mgf_gnps.html","id":null,"dir":"Reference","previous_headings":"","what":"Check spec_metadata for GNPS .mgf format before exporting the MS/MS library — check_specdt_mgf_gnps","title":"Check spec_metadata for GNPS .mgf format before exporting the MS/MS library — check_specdt_mgf_gnps","text":"Internal function","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_specdt_mgf_gnps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check spec_metadata for GNPS .mgf format before exporting the MS/MS library — check_specdt_mgf_gnps","text":"","code":"check_specdt_mgf_gnps(spec_metadata = NULL)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_specdt_mgf_gnps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check spec_metadata for GNPS .mgf format before exporting the MS/MS library — check_specdt_mgf_gnps","text":"spec_metadata data frame containing values including resulting .mgffile. case, minimum mandatory information included.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_specdt_mgf_gnps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check spec_metadata for GNPS .mgf format before exporting the MS/MS library — check_specdt_mgf_gnps","text":"function aims create unique KEY sort iterate compound table order match keys created MS/MS imported sort_compound_table(). three main steps : Create unique row key: Compound name + Polarity + CE Check duplicated values Sort compound table Name CE value","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_specdt_msp.html","id":null,"dir":"Reference","previous_headings":"","what":"Check spec_metadata for NIST format before exporting the MS/MS library — check_specdt_msp","title":"Check spec_metadata for NIST format before exporting the MS/MS library — check_specdt_msp","text":"Internal function","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_specdt_msp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check spec_metadata for NIST format before exporting the MS/MS library — check_specdt_msp","text":"","code":"check_specdt_msp(spec_metadata = NULL)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_specdt_msp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check spec_metadata for NIST format before exporting the MS/MS library — check_specdt_msp","text":"spec_metadata data frame containing values including resulting .mgf file. case, minimum mandatory information included.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/check_specdt_msp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check spec_metadata for NIST format before exporting the MS/MS library — check_specdt_msp","text":"functions aims create unique KEY sort iterate compound table order match keys created MS/MS imported sort_compound_table(). three main steps : Create unique row key: Compound name + Polarity + CE Check duplicated values Sort compound table Name CE value","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/compare_spectra.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two MS/MS spectra based on cosine score — compare_spectra","title":"Compare two MS/MS spectra based on cosine score — compare_spectra","text":"wrapper function calculate cosine similarity score two spectra. function selects m/z intensity columns parsing data frames SpectrumSimilarity.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/compare_spectra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two MS/MS spectra based on cosine score — compare_spectra","text":"","code":"compare_spectra(spec1, spec2, output.list = TRUE, ...)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/compare_spectra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two MS/MS spectra based on cosine score — compare_spectra","text":"spec1 data frame containing spectra info. spec2 data frame containing spectra info. output.list boolean,  TRUE output returned list ... arguments parsed SpectrumSimilarity.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/compare_spectra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare two MS/MS spectra based on cosine score — compare_spectra","text":"","code":"# Importing the Spectrum of Procyanidin A2 in negative ionization mode # and 20 eV as the collision energy ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" )  # Importing the MS2 of Procyanidin A2 deconvoluted by PCDL (Agilent) ProcA2_pcdl_fl <- system.file(\"extdata\",   \"ProcA2_neg_20eV_PCDL.csv\",   package = \"MS2extract\" ) # Region of interest table (rt in seconds) ProcA2_data <- data.frame(   Formula = \"C30H24O12\", Ionization_mode = \"Negative\",   min_rt = 163, max_rt = 180 ) # Reading the Procyanidin A2 spectra ProcA2_raw <- import_mzxml(ProcA2_file, ProcA2_data) #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 575.11376 and 575.12526 # Extracting the most instense MS2 spectra ProcA2_extracted <- extract_MS2(ProcA2_raw, out_list = FALSE) #> Warning: `position_stack()` requires non-overlapping x intervals  # Detecting masses ProcA2_norm <- detect_mass(ProcA2_extracted, normalize = TRUE, min_int = 1)  # Plot of the resulting reference MS2 spectra using MS2extract plot_MS2spectra(ProcA2_norm) +   ggplot2::labs(title = \"MS2extract spectra\") #> Warning: `position_stack()` requires non-overlapping x intervals   # Reading the MS2 spectra of Procynidin A2 by PCDL ProcA2_PCDL <- read.csv(ProcA2_pcdl_fl)  # Plot of the reference MS2 spectra using PCDL (Agilent software) ggplot2::ggplot(ProcA2_PCDL, ggplot2::aes(mz, intensity)) +   ggplot2::geom_col(width = 1) +   ggplot2::theme_bw() #> Warning: `position_stack()` requires non-overlapping x intervals   # Cosine comparison between MS2extract and PCDL MS2 spectra compare_spectra(ProcA2_norm, ProcA2_PCDL)  #> $similarity.score #> [1] 0.9953542 #>  #> $alignment #>          mz intensity.top intensity.bottom #> 1  125.0242            10               10 #> 2  285.0405            62               59 #> 3  289.0716            48               45 #> 4  407.0767            16               17 #> 5  423.0720            53               53 #> 6  449.0876            51               50 #> 7  452.0742            15               20 #> 8  539.0978            22               22 #> 9  575.1195           100              100 #> 10 576.1221            13                0 #>  #> $plot #> gTree[GRID.gTree.585]  #>"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/detect_mass.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect masses in a MS/MS spectra — detect_mass","title":"Detect masses in a MS/MS spectra — detect_mass","text":"Similarly  mass detection step MZmine workflow, detect mass filters low intensity signals. , can opt detect masses raw ion intensity (ion counts), normalize spectra abundant ion, detect intensity percentage ion. default set include ions least 1% abundant ion.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/detect_mass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect masses in a MS/MS spectra — detect_mass","text":"","code":"detect_mass(spec, normalize = TRUE, min_int = 1)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/detect_mass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect masses in a MS/MS spectra — detect_mass","text":"spec data frame containing MS/MS spectra. normalize boolean indicating MS/MS spectra normalized base peak proceeding filter low intensity signal (normalize  = TRUE), normalize = FALSE user provide minimum ion count. min_int integer minimum ion intensity","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/detect_mass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect masses in a MS/MS spectra — detect_mass","text":"","code":"# Importing the Spectrum of Procyanidin A2 in negative ionization mode # and 20 eV as the collision energy ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" ) # Region of interest table (rt in seconds) ProcA2_data <- data.frame(   Formula = \"C30H24O12\", Ionization_mode = \"Negative\",   min_rt = 163, max_rt = 180 ) ProcA2_raw <- import_mzxml(ProcA2_file, ProcA2_data) #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 575.11376 and 575.12526 # 26731 ion signals dim(ProcA2_raw) #> [1] 24249     6  # Detecting masses with the normalized spectra and ions with # intensities greater than 5% ProcA2_detected <- detect_mass(ProcA2_raw, normalize = TRUE, min_int = 5) dim(ProcA2_detected) #> [1] 40  6"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/extract_MS2.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the most intense MS/MS  scan — extract_MS2","title":"Extract the most intense MS/MS  scan — extract_MS2","text":"function takes series MS/MS spectra, selects intense scan extracts MS/MS  spectra . Additionally, plots MS/MS EIC chromatogram colors intense scan red circle, precursor ion blue diamond","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/extract_MS2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the most intense MS/MS  scan — extract_MS2","text":"","code":"extract_MS2(spec, verbose = TRUE, out_list = FALSE)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/extract_MS2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the most intense MS/MS  scan — extract_MS2","text":"spec data frame MS/MS  spectra verbose boolean indicating MS/MS EIC chromatogram displayed out_list boolean expressing output list containing MS/MS spectra plus EIC chromatogram (verbose = TRUE), data frame MS/MS  spectra (verbose = FALSE).","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/extract_MS2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the most intense MS/MS  scan — extract_MS2","text":"","code":"# Importing the Spectrum of Procyanidin A2 in negative ionzation mode # and 20 eV as the collision energy ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" )  # Region of interest table (rt in seconds) ProcA2_data <- data.frame(   Formula = \"C30H24O12\", Ionization_mode = \"Negative\",   min_rt = 163, max_rt = 180 ) # Importing MS/MS data ProcA2_raw <- import_mzxml(ProcA2_file, ProcA2_data) #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 575.11376 and 575.12526  # Extracting most intense scan ---- # Returning plot + MS2 spectra extract_MS2(ProcA2_raw) #> Warning: `position_stack()` requires non-overlapping x intervals  #> # A tibble: 6,226 × 6 #> # Groups:   Formula, CE [1] #>       mz intensity mz_precursor    rt    CE Formula   #>    <dbl>     <dbl>        <dbl> <dbl> <dbl> <chr>     #>  1  100.      40.1         575.  171.    20 C30H24O12 #>  2  100.      23.3         575.  171.    20 C30H24O12 #>  3  100.      15.8         575.  171.    20 C30H24O12 #>  4  101.     255.          575.  171.    20 C30H24O12 #>  5  101.      11           575.  171.    20 C30H24O12 #>  6  102.      91.5         575.  171.    20 C30H24O12 #>  7  103.       9           575.  171.    20 C30H24O12 #>  8  104.      21.2         575.  171.    20 C30H24O12 #>  9  104.      91.1         575.  171.    20 C30H24O12 #> 10  104.      14.7         575.  171.    20 C30H24O12 #> # ℹ 6,216 more rows  # Returning MS/MS spectra only extract_MS2(ProcA2_raw, out_list = FALSE) #> Warning: `position_stack()` requires non-overlapping x intervals  #> # A tibble: 6,226 × 6 #> # Groups:   Formula, CE [1] #>       mz intensity mz_precursor    rt    CE Formula   #>    <dbl>     <dbl>        <dbl> <dbl> <dbl> <chr>     #>  1  100.      40.1         575.  171.    20 C30H24O12 #>  2  100.      23.3         575.  171.    20 C30H24O12 #>  3  100.      15.8         575.  171.    20 C30H24O12 #>  4  101.     255.          575.  171.    20 C30H24O12 #>  5  101.      11           575.  171.    20 C30H24O12 #>  6  102.      91.5         575.  171.    20 C30H24O12 #>  7  103.       9           575.  171.    20 C30H24O12 #>  8  104.      21.2         575.  171.    20 C30H24O12 #>  9  104.      91.1         575.  171.    20 C30H24O12 #> 10  104.      14.7         575.  171.    20 C30H24O12 #> # ℹ 6,216 more rows"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/extract_scan_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract scan info out of the list — extract_scan_info","title":"Extract scan info out of the list — extract_scan_info","text":"Internal function","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/extract_scan_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract scan info out of the list — extract_scan_info","text":"","code":"extract_scan_info(mzxml)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/extract_scan_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract scan info out of the list — extract_scan_info","text":"mzxml list created masstools::read_mzxml()","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/extract_scan_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract scan info out of the list — extract_scan_info","text":"data.frame containing name scan name (combined m/z rt) mz precursor m/z ion rt retention time CE collision energy file name file name","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/extract_scan_info.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract scan info out of the list — extract_scan_info","text":"Given list created MS2extract:::read_mzxml(), function extracts scan info scans tidy format.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/get_TIC.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the total ion chromatogram (TIC) — get_TIC","title":"Calculate the total ion chromatogram (TIC) — get_TIC","text":"Internal function","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/get_TIC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the total ion chromatogram (TIC) — get_TIC","text":"","code":"get_TIC(spec)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/get_TIC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the total ion chromatogram (TIC) — get_TIC","text":"spec data frame two columns: mz intensity","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/get_TIC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the total ion chromatogram (TIC) — get_TIC","text":"function computes MS/MS TIC given precursor ion.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/get_ppm.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the  m/z difference for a given mass and ppm tolerance — get_ppm","title":"Calculate the  m/z difference for a given mass and ppm tolerance — get_ppm","text":"Given theoretical  m/z value ppm tolerance, computes  m/z deviation.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/get_ppm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the  m/z difference for a given mass and ppm tolerance — get_ppm","text":"","code":"get_ppm(mz, ppm = 10)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/get_ppm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the  m/z difference for a given mass and ppm tolerance — get_ppm","text":"mz double, theoretical m/z value. ppm double, ppm error tolerance.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/get_ppm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the  m/z difference for a given mass and ppm tolerance — get_ppm","text":"double m/z value deviation given theoretical m/z value","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/get_ppm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the  m/z difference for a given mass and ppm tolerance — get_ppm","text":"","code":"get_ppm(mz = 355.1023, ppm = 20) #> [1] 0.007102046  # Chlorogenic acid [M+H]+ = 355.1023 m/z chlorogenic_acid_pos <- 355.1023 ppm_error <- 10 get_ppm(mz = chlorogenic_acid_pos, ppm = ppm_error) #> [1] 0.003551023"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/import_mzxml.html","id":null,"dir":"Reference","previous_headings":"","what":"Imports mzXML/mzML files with MS/MS scans — import_mzxml","title":"Imports mzXML/mzML files with MS/MS scans — import_mzxml","text":"function reads .mzXML .mzML files containing MS/MS. function inspired masstools::read_mzxml()imports data list. , element list represents one scan. Also, scans contains two sub-lists contain (1) scan information (2) spectra per scan.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/import_mzxml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Imports mzXML/mzML files with MS/MS scans — import_mzxml","text":"","code":"import_mzxml(file = NULL, met_metadata = NULL, ppm = 10)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/import_mzxml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Imports mzXML/mzML files with MS/MS scans — import_mzxml","text":"file file name path .mzXML .mzML MS/MS data met_metadata data frame following columns. Required: Formula character string specifying metabolite formula Ionization_mode ionization mode employed data collection. can Positive Negative Ionization_mode ionization mode set data collection (Positive Negative mode allowed). File filename mzXML file inluding path COLLISIONENERGY Collision energy applied MS/MS fragmentation two columns mandatory since formula used Rdisop package calculate exact mass ionization mode determine whether mass proton added subtracted calculate charged mass. Additionally, can provide minimum maximum retention times look peak within given area including following columns: min_rt numeric, minimum retention time keep max_rt numeric, minimum retention time keep two columns highly recommended included narrow search window ensure peak want selected. especially important multiple peaks data file. ppm mass error ppm. 10 ppm default value.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/import_mzxml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Imports mzXML/mzML files with MS/MS scans — import_mzxml","text":"data.frame tidy format MS/MS spectra tidy format. mz ion m/z value intensity ion intensity count mz_precursor precursor ion rt retention time (seconds) Formula Chemical formula provided met_metada","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/import_mzxml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Imports mzXML/mzML files with MS/MS scans — import_mzxml","text":"","code":"# \\donttest{ # Importing the Spectrum of Procyanidin A2 in negative ionization mode # and 20 eV as the collision energy ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" ) # Compound metadata without ROI information ProcA2_data <- data.frame(Formula = \"C30H24O12\", Ionization_mode = \"Negative\") ProcA2_raw <- import_mzxml(ProcA2_file, met_metadata = ProcA2_data) #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 575.11376 and 575.12526  # 26731 ions detected in total dim(ProcA2_raw) #> [1] 26731     6  # Region of interest table (rt in seconds) ProcA2_data <- data.frame(   Formula = \"C30H24O12\", Ionization_mode = \"Negative\",   min_rt = 163, max_rt = 180 ) ProcA2_roi <- import_mzxml(ProcA2_file, met_metadata = ProcA2_data) #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 575.11376 and 575.12526  # 24249 ions detected in ROI dim(ProcA2_roi) #> [1] 24249     6 # }"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/mgf_GNPS_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes the GNPS .mgf backbone — mgf_GNPS_core","title":"Writes the GNPS .mgf backbone — mgf_GNPS_core","text":"Internal Function","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/mgf_GNPS_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes the GNPS .mgf backbone — mgf_GNPS_core","text":"","code":"mgf_GNPS_core(spec, spec_metadata, mgf_filename)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/mgf_GNPS_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes the GNPS .mgf backbone — mgf_GNPS_core","text":"spec extracted spectra spec_metadata spectra metadata mgf_filename file name .mgf library. name created calling function.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/mgf_GNPS_core.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Writes the GNPS .mgf backbone — mgf_GNPS_core","text":"function writes backbone .mgf format compatible GNPS.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/normalize_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalization and low intensity signal filtering — normalize_spec","title":"Normalization and low intensity signal filtering — normalize_spec","text":"function normalizes raw spectra converting raw intensities, 0-100% relative intensity based intense ion. function also remove low intensity signals based minimum cutoff. default cutoff 1% spectra normalized.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/normalize_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalization and low intensity signal filtering — normalize_spec","text":"","code":"normalize_spec(spec, min_int = 1)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/normalize_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalization and low intensity signal filtering — normalize_spec","text":"spec data frame produced import_mzxml() function. min_int integer, minimum  intensity. spectra normalized, values 0-100 range. spectra normalized, value must ion count.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/normalize_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalization and low intensity signal filtering — normalize_spec","text":"","code":"# Importing the Spectrum of Procyanidin A2 in negative ionization mode # and 20 eV as the collision energy ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" )  # Region of interest table (rt in seconds) ProcA2_data <- data.frame(   Formula = \"C30H24O12\", Ionization_mode = \"Negative\",   min_rt = 163, max_rt = 180 )  ProcA2_raw <- import_mzxml(ProcA2_file, ProcA2_data) #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 575.11376 and 575.12526  # Check raw intensities # Ranges:  1.125 851439.500 range(ProcA2_raw$intensity) #> [1]      1.125 851439.500  ProcA2_norm <- normalize_spec(ProcA2_raw) # Ranges: 2 100 range(ProcA2_norm$intensity) #> [1]   2 100"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/plot_MS2base.html","id":null,"dir":"Reference","previous_headings":"","what":"Base function for MS2 spectra — plot_MS2base","title":"Base function for MS2 spectra — plot_MS2base","text":"Internal function","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/plot_MS2base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base function for MS2 spectra — plot_MS2base","text":"","code":"plot_MS2base(spec, ppm)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/plot_MS2base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base function for MS2 spectra — plot_MS2base","text":"spec data frame containing MS/MS spectra intense scan ppm ppm error tolerance check m/z precursor detected MS/MS spectra","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/plot_MS2base.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Base function for MS2 spectra — plot_MS2base","text":"base function plotting MS/MS spectra.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/plot_MS2spectra.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MS/ms spectra — plot_MS2spectra","title":"Plot MS/ms spectra — plot_MS2spectra","text":"function plots resulting MS/MS spectra intense scan","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/plot_MS2spectra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MS/ms spectra — plot_MS2spectra","text":"","code":"plot_MS2spectra(spec, compound = NULL, ppm = 10)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/plot_MS2spectra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MS/ms spectra — plot_MS2spectra","text":"spec data frame containing MS/MS spectra intense scan compound character, user using batch_* functions, need provide character identical “Name” compound provided batch_import_mzxml() table. ppm mass error ppm tolerance check m/z precursor detected MS/MS spectra.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/plot_MS2spectra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MS/ms spectra — plot_MS2spectra","text":"ggplot plot MS/MS spectra. filled blue diamond placed precursor ion. precursor ion detected MS/MS spectra, blue diamond filled.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/plot_MS2spectra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MS/ms spectra — plot_MS2spectra","text":"","code":"Rutin_file <- system.file(\"extdata\",   \"Rutin_neg_20eV.mzXML\",    package = \"MS2extract\"  )   # Region of interest table (rt in seconds) Rutin_data <- data.frame(Formula = \"C27H30O16\",     Ionization_mode = \"Negative\",     min_rt = 160, max_rt = 175  )  # Importing MS2 data rutin_raw <- import_mzxml(Rutin_file, Rutin_data) #> • Processing: Rutin_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 609.14002 and 609.15221 Rutin_extracted <- extract_MS2(rutin_raw) #> Warning: `position_stack()` requires non-overlapping x intervals   Rutin_detected <- detect_mass(Rutin_extracted,    normalize = TRUE, # Allow normalization    min_int = 1) # 1% as minimum intensity MS2_spectra <- plot_MS2spectra(Rutin_detected) print(MS2_spectra)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/plot_tic.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MS/MS TIC — plot_tic","title":"Plot MS/MS TIC — plot_tic","text":"Internal function","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/plot_tic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MS/MS TIC — plot_tic","text":"","code":"plot_tic(spec)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/plot_tic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MS/MS TIC — plot_tic","text":"spec data frame MS/MS spectra","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/plot_tic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MS/MS TIC — plot_tic","text":"list. first element data frame retention time highest intensity EIC plot second list element.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/plot_tic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot MS/MS TIC — plot_tic","text":"function plots MS/MS TIC mark intense scan used extract MS/MS spectra","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/ppm_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the m/z upper and lower values limits given a ppm tolerance — ppm_range","title":"Calculate the m/z upper and lower values limits given a ppm tolerance — ppm_range","text":"Given theoretical m/z value, ppm error tolerance, function calculates lower upper m/z values.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/ppm_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the m/z upper and lower values limits given a ppm tolerance — ppm_range","text":"","code":"ppm_range(mz, ppm)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/ppm_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the m/z upper and lower values limits given a ppm tolerance — ppm_range","text":"mz double, theoretical m/z value. ppm double, mass error ppm","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/ppm_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the m/z upper and lower values limits given a ppm tolerance — ppm_range","text":"vector two elements containing upper lower m/zvalues given provided mass error tolerance.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/ppm_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the m/z upper and lower values limits given a ppm tolerance — ppm_range","text":"","code":"chlorogenic_acid_pos <- 355.1023 ppm_error <- 10 ppm_range(mz = chlorogenic_acid_pos, ppm = ppm_error) #> [1] 355.0987 355.1059"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/read_mzxml.html","id":null,"dir":"Reference","previous_headings":"","what":"Read .mzxml/.mzML files containing MS/MS data — read_mzxml","title":"Read .mzxml/.mzML files containing MS/MS data — read_mzxml","text":"Internal Function * function takes .mzxml/.mzML file imports MS/MS data create list containing two sublists scan information (fisrt sublist) MS2 spectra (second sublist)","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/read_mzxml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read .mzxml/.mzML files containing MS/MS data — read_mzxml","text":"","code":"read_mzxml(file, threads = 3, mode = c(\"inMemory\", \"onDisk\"))"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/read_mzxml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read .mzxml/.mzML files containing MS/MS data — read_mzxml","text":"file vector names ms2 files. MS2 file must mzXML mzML. threads Thread number mode inMemory onDisk","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/read_mzxml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read .mzxml/.mzML files containing MS/MS data — read_mzxml","text":"Return ms2 data. list.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/read_mzxml.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read .mzxml/.mzML files containing MS/MS data — read_mzxml","text":"Xiaotao Shen inspired masstools package https://www.tidymass.org","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/read_mzxml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read .mzxml/.mzML files containing MS/MS data — read_mzxml","text":"","code":"ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" )  ProcA2_raw <- read_mzxml(ProcA2_file) #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/roi_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtering the region of interest (ROI) — roi_filter","title":"Filtering the region of interest (ROI) — roi_filter","text":"function takes data frame minimum maximum retention time (seconds), keeps scans inside provided boundaries. filter function aims keep scans provided ROI remove scans outside ROI.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/roi_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtering the region of interest (ROI) — roi_filter","text":"","code":"roi_filter(spec, roi_table)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/roi_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtering the region of interest (ROI) — roi_filter","text":"spec data frame containing MS/MS data. roi_table data frame two columns min_rt max_rt specifying minimum maximum retention time specific metabolite.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/roi_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filtering the region of interest (ROI) — roi_filter","text":"","code":"# \\donttest{ # Importing the Spectrum of Procyanidin A2 in negative ionization mode # and 20 eV as the collision energy ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" )  # Region of interest table (rt ins seconds) ProcA2_data <- data.frame(   Formula = \"C30H24O12\", Ionization_mode = \"Negative\",   min_rt = 163, max_rt = 180 )  ProcA2_raw <- import_mzxml(ProcA2_file, ProcA2_data) #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 575.11376 and 575.12526  # 26731 ions detected in total dim(ProcA2_raw) #> [1] 24249     6 # }"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/sort_compound_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort compound table before importing data — sort_compound_table","title":"Sort compound table before importing data — sort_compound_table","text":"Internal function","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/sort_compound_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort compound table before importing data — sort_compound_table","text":"","code":"sort_compound_table(compounds_dt = NULL)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/sort_compound_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort compound table before importing data — sort_compound_table","text":"compounds_dt data frame containing following columns. Name name compound Formula compound's chemical formula Ionization_mode ionization mode set data collection (Positive Negative mode allowed). File filename .mzXML/.mzML file inluding path COLLISIONENERGY Collision energy applied MS/MS fragmentation","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/sort_compound_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sort compound table before importing data — sort_compound_table","text":"function check compound data unique values (metabolites) per row, importing MS/MS data. function performs following checks: Create unique row key: Compound name + Polarity + CE Check duplicated values based keys Sort compound table Name CE value","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_gnps_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates the batch upload .tsv table for GNPS batch upload job — write_gnps_table","title":"Creates the batch upload .tsv table for GNPS batch upload job — write_gnps_table","text":"Internal Function *","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_gnps_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates the batch upload .tsv table for GNPS batch upload job — write_gnps_table","text":"","code":"write_gnps_table(spec, spec_metadata, mgf_filename)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_gnps_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates the batch upload .tsv table for GNPS batch upload job — write_gnps_table","text":"spec extracted spectra spec_metadata spectra metadata mgf_filename file name .mgf library. name created calling function.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_gnps_table.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates the batch upload .tsv table for GNPS batch upload job — write_gnps_table","text":"function designed create batch upload table required GNPS batch upload job. function takes , spec data spec_metadata create bath upload table.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_mgf_gnps.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the GNPS .mgf backbone file format — write_mgf_gnps","title":"Create the GNPS .mgf backbone file format — write_mgf_gnps","text":"function facilitates create structure GNPS .mgf format. information submitting spectra GNPS, please visit link. can find GNPS template spreadsheet link.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_mgf_gnps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the GNPS .mgf backbone file format — write_mgf_gnps","text":"","code":"write_mgf_gnps(spec = NULL, spec_metadata = NULL, mgf_name = NULL)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_mgf_gnps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the GNPS .mgf backbone file format — write_mgf_gnps","text":"spec data frame containing extracted MS/MS spectra, following column required: mz_precursor precursor ion rt retention time mz m/z  values intensity intensity values spec_metadata data frame containing values including resulting .mgf file. case, minimum mandatory information included. full explanation fields field content can found GNPS batch library upload link. rest fields included final library file, MS2extract get information extracted spectra. highly suggest check gnps_template.xlsx file described function example check fields/columns required MS2extract. COMPOUND_NAME character, Metabolite name, name used met_metadata, data frame used import MS/MS data INSTRUMENT character, instrument used data collection COLLISIONENERGY character, collision energy used MS/MS fragmentation IONSOURCE Ionization source SMILES character, SMILES chemical structure metabolite INCHI character, Inchi value metabolite INCHIAUX character, INCHIAUX metabolite IONMODE character, ionization polarity PUBMED character, PUBMED id submitted MS/MS spectra ACQUISITION character, Crude, Lysate, Commercial, Isolated, DATACOLLECTOR character, Person collected MS/MS data INTEREST character, interest MS/MS data LIBQUALITY character, library quality. 1 Gold, 2 Silver, 3 Bronze GENUS character, genus organism SPECIES character, species organism STRAIN character, strain organism CASNUMBER character, CAS number metabolite PI character, principal investigator mgf_name file name exported .mgflibrary. contain file extension  .mgf.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_mgf_gnps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the GNPS .mgf backbone file format — write_mgf_gnps","text":"batch spectra found, function writes two files, .mgf library required .tsv table required GNPS. single spectrum detected, write .mgf library.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_mgf_gnps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the GNPS .mgf backbone file format — write_mgf_gnps","text":"","code":"# Example with batch spectra ----   # Select the csv file name and path batch_file <- system.file(\"extdata\", \"batch_read.csv\",   package = \"MS2extract\" ) # Read the data frame batch_data <- read.csv(batch_file)  # File paths for Procyanidin A2 and Rutin ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" ) Rutin_file <- system.file(\"extdata\",   \"Rutin_neg_20eV.mzXML\",   package = \"MS2extract\" )  # Add file path - User should specified the file path - batch_data$File <- c(ProcA2_file, Rutin_file)  # Checking batch_data data frame batch_data #>             Name   Formula Ionization_mode min_rt max_rt COLLISIONENERGY #> 1 Procyanidin A2 C30H24O12        Negative    163    180           20 eV #> 2          Rutin C27H30O16        Negative    162    171           20 eV #>                                                                              File #> 1 /home/runner/work/_temp/Library/MS2extract/extdata/ProcyanidinA2_neg_20eV.mzXML #> 2         /home/runner/work/_temp/Library/MS2extract/extdata/Rutin_neg_20eV.mzXML  # Using batch import to import multiple compounds batch_compounds <- batch_import_mzxml(batch_data) #>  #> ── Begining batch import ─────────────────────────────────────────────────────── #>  #> ── -- ── #>  #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 575.11376 and 575.12526 #> • Compound name: Procyanidin A2_Negative_20 #>  #> ── -- ── #>  #> • Processing: Rutin_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 609.14002 and 609.15221 #> • Compound name: Rutin_Negative_20 #>  #> ── End batch import ──────────────────────────────────────────────────────────── # Checking dimension by compound # Procyanidin A2: 24249 ions # Rutin: 22096 ions purrr::map(batch_compounds, dim) #> $`Procyanidin A2_Negative_20` #> [1] 24249     6 #>  #> $Rutin_Negative_20 #> [1] 22096     6 #>   batch_extracted_compounds <- batch_extract_MS2(batch_compounds) #> Warning: `position_stack()` requires non-overlapping x intervals #> Warning: `position_stack()` requires non-overlapping x intervals    # Batch detect mass batch_mass_detected <- batch_detect_mass(batch_extracted_compounds,   normalize = TRUE, # Normalize   min_int = 1 # Minimum intensity )  # Reading metadata from GNPS template template_file <- system.file(\"extdata\", \"GNPS_template.xlsx\",                  package = \"MS2extract\")  gnps_template <- readxl::read_excel(path = template_file,                 sheet = \"batch_example\")  write_mgf_gnps(spec = batch_mass_detected,                spec_metadata = gnps_template,                mgf_name = \"PhenolicsDB\") #> • Filtering MS/MS scans for 20 CE #> • Filtering MS/MS scans for 20 CE"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_msp.html","id":null,"dir":"Reference","previous_headings":"","what":"Export MS/MS spectra to a .msp file — write_msp","title":"Export MS/MS spectra to a .msp file — write_msp","text":"functions takes extracted MS/MS spectra writes .msp file format. function incorporates extracted MS/MS spectra along metadata compound.","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_msp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export MS/MS spectra to a .msp file — write_msp","text":"","code":"write_msp(spec = NULL, spec_metadata = NULL, msp_name = NULL)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_msp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export MS/MS spectra to a .msp file — write_msp","text":"spec data frame containing extracted MS/MS spectra, following columnS required: mz_precursor  rt  mz  intensity  spec_metadata data frame containing values including resulting .msp file. following columns required vital information .msp output. NAME  PRECURSORTYPE  FORMULA  RETENTIONTIME  IONMODE  following fields can included resulting .msp file, required present metadata table. column exist column value missing, blank field exported INCHIKEY  SMILES  CCS  COLLISIONENERGY  INSTRUMENTTYPE  msp_name string name .msp file excluding file extension","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_msp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export MS/MS spectra to a .msp file — write_msp","text":"","code":"# Example with single MS/MS spectra -----  # Importing the Spectrum of Procyanidin A2 in negative ionization mode # and 20 eV as the collision energy ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" )  # Region of interest table (rt in seconds) ProcA2_data <- data.frame(   Formula = \"C30H24O12\", Ionization_mode = \"Negative\",   min_rt = 163, max_rt = 180 )  ProcA2_raw <- import_mzxml(ProcA2_file, ProcA2_data) #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 575.11376 and 575.12526  # Extracting the most intense MS2 scan ProcA2_ext <- extract_MS2(ProcA2_raw) #> Warning: `position_stack()` requires non-overlapping x intervals   # Detecting masses with the normalized spectra and ions with # intensities greater than 1% ProcA2_detected <- detect_mass(ProcA2_ext,   normalize = TRUE, # Allow normalization   min_int = 1 ) # 1% as minimum intensity  # Reading the metadata metadata_file <- system.file(\"extdata\",   \"msp_metadata.csv\",   package = \"MS2extract\" ) metadata <- read.csv(metadata_file) #> Warning: incomplete final line found by readTableHeader on '/home/runner/work/_temp/Library/MS2extract/extdata/msp_metadata.csv'  # Exporting msp file write_msp(   spec = ProcA2_detected,   spec_metadata = metadata,   msp_name = \"Procyanidin_A2\" ) #> • Filtering MS/MS scans for 20 CE    # Example with batch spectra ----   # Select the csv file name and path batch_file <- system.file(\"extdata\", \"batch_read.csv\",   package = \"MS2extract\" ) # Read the data frame batch_data <- read.csv(batch_file)  # File paths for Procyanidin A2 and Rutin ProcA2_file <- system.file(\"extdata\",   \"ProcyanidinA2_neg_20eV.mzXML\",   package = \"MS2extract\" ) Rutin_file <- system.file(\"extdata\",   \"Rutin_neg_20eV.mzXML\",   package = \"MS2extract\" )  # Add file path - User should specified the file path - batch_data$File <- c(ProcA2_file, Rutin_file)  # Checking batch_data data frame batch_data #>             Name   Formula Ionization_mode min_rt max_rt COLLISIONENERGY #> 1 Procyanidin A2 C30H24O12        Negative    163    180           20 eV #> 2          Rutin C27H30O16        Negative    162    171           20 eV #>                                                                              File #> 1 /home/runner/work/_temp/Library/MS2extract/extdata/ProcyanidinA2_neg_20eV.mzXML #> 2         /home/runner/work/_temp/Library/MS2extract/extdata/Rutin_neg_20eV.mzXML  # Reading batch metadata metadata_msp_file <- system.file(\"extdata\",   \"batch_msp_metadata.csv\",   package = \"MS2extract\" )  metadata_msp <- read.csv(metadata_msp_file) #> Warning: incomplete final line found by readTableHeader on '/home/runner/work/_temp/Library/MS2extract/extdata/batch_msp_metadata.csv'  # Using batch import to import multiple compounds batch_compounds <- batch_import_mzxml(batch_data) #>  #> ── Begining batch import ─────────────────────────────────────────────────────── #>  #> ── -- ── #>  #> • Processing: ProcyanidinA2_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 575.11376 and 575.12526 #> • Compound name: Procyanidin A2_Negative_20 #>  #> ── -- ── #>  #> • Processing: Rutin_neg_20eV.mzXML #> • Found 1 CE value: 20 #> • Remember to match CE velues in spec_metadata when exporting your library #> • m/z range given 10 ppm: 609.14002 and 609.15221 #> • Compound name: Rutin_Negative_20 #>  #> ── End batch import ──────────────────────────────────────────────────────────── # Checking dimension by compound # Procyanidin A2: 24249 ions # Rutin: 22096 ions purrr::map(batch_compounds, dim) #> $`Procyanidin A2_Negative_20` #> [1] 24249     6 #>  #> $Rutin_Negative_20 #> [1] 22096     6 #>   batch_extracted_compounds <- batch_extract_MS2(batch_compounds) #> Warning: `position_stack()` requires non-overlapping x intervals #> Warning: `position_stack()` requires non-overlapping x intervals    # Batch detect mass batch_mass_detected <- batch_detect_mass(batch_extracted_compounds, # Compound list   normalize = TRUE, # Normalize   min_int = 1 ) # Minimum intensity  # Checking dimension by compound # Procyanidin A2: 107 ions # Rutin: 12 ions purrr::map(batch_mass_detected, dim) #> $`Procyanidin A2_Negative_20` #> [1] 38  6 #>  #> $Rutin_Negative_20 #> [1] 4 6 #>   # Writing msp file write_msp(   spec = batch_mass_detected,   spec_metadata = metadata_msp,   msp_name = \"ProcA2_Rutin_batch\" ) #> • Filtering MS/MS scans for 20 CE #> • Filtering MS/MS scans for 20 CE"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_msp_base.html","id":null,"dir":"Reference","previous_headings":"","what":"Export MS/ms spectra to a .msp file — write_msp_base","title":"Export MS/ms spectra to a .msp file — write_msp_base","text":"Internal function","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_msp_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export MS/ms spectra to a .msp file — write_msp_base","text":"","code":"write_msp_base(spec = NULL, spec_metadata = NULL)"},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_msp_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export MS/ms spectra to a .msp file — write_msp_base","text":"spec data frame containing extracted MS/MS spectra, following columns required: mz_precursor  rt  mz  intensity  spec_metadata data frame containing values including resulting .msp file. following column required vital information .msp output. NAME  PRECURSORTYPE  FORMULA  RETENTIONTIME  IONMODE  following fields also included resulting msp files, required present metadata table. column exist column value missing, export blank field. INCHIKEY  SMILES  CCS  COLLISIONENERGY  INSTRUMENTTYPE","code":""},{"path":"https://cooperstonelab.github.io/MS2extract/reference/write_msp_base.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export MS/ms spectra to a .msp file — write_msp_base","text":"functions takes extracted MS/MS spectra writes .msp file format. function incorporates extracted MS/ms spectra along metadata compound.","code":""},{"path":[]},{"path":"https://cooperstonelab.github.io/MS2extract/news/index.html","id":"package-creation-available-functions-0-1-0","dir":"Changelog","previous_headings":"","what":"Package creation, available functions:","title":"CHANGES IN VERSION 0.1.0","text":"add_attributes assign_scan_id() batch_detect_mass() batch_extract_MS2() batch_import_mzxml() check_metadata() compare_spectra() detect_mass() extract_MS2() extract_scan_info() get_TIC() get_ppm() import_mzxml() normalize_spec() plot_MS2base() plot_MS2spectra() plot_tic() ppm_range() read_mzxml() roi_filter() write_msp() write_msp_base()","code":""}]
